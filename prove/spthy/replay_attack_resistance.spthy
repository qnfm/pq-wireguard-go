maude tool: 'maude'
 checking version: 2.7.1. OK.
 checking installation: OK.

theory PQWireGuard begin

// Function signature and definition of the equational theory E

builtins: xor
functions: adec/2, aead/3, aenc/2, decrypt/2, fst/1, h/1, pair/2, pk/1,
           prf/2, snd/1, true/0, verify/3
equations:
    adec(aenc(x.1, pk(x.2)), x.2) = x.1,
    decrypt(aead(k, p, a), k) = p,
    fst(<x.1, x.2>) = x.1,
    snd(<x.1, x.2>) = x.2,
    verify(aead(k, p, a), a, k) = true

heuristic: i

/* looping facts with injective instances: L_State/2 */

restriction Eq_testing:
  "∀ x y #i. (Eq( x, y ) @ #i) ⇒ (x = y)"
  // safety formula

restriction OnlyOnce:
  "∀ i r t #i.1 #j.
    ((OnlyOnce( i, r, t ) @ #i.1) ∧ (OnlyOnce( i, r, t ) @ #j)) ⇒
    (#i.1 = #j)"
  // safety formula

rule (modulo E) AgentKeyGen:
   [ Fr( ~ltk ) ]
  --[ StaticKey( pk(~ltk) ) ]->
   [ !F_AgentKey( ~ltk ), Out( pk(~ltk) ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) PSKKeyGen:
   [ Fr( ~psk ) ] --[ PSKey( ~psk ) ]-> [ !F_AgentPSK( ~psk ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) PRFKeyGen:
   [ Fr( ~k ) ] --[ PRFKey( ~k ) ]-> [ !F_AgentPRFK( ~k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) DefaultPSKGen:
   [ !F_AgentKey( ~ltkA ), !F_AgentKey( ~ltkB ) ]
  --[
  DefaultPSK( pk(~ltkA), h((pk(~ltkA)⊕pk(~ltkB))) ),
  DefaultPSK( pk(~ltkB), h((pk(~ltkA)⊕pk(~ltkB))) ),
  Reveal_PSK( h((pk(~ltkA)⊕pk(~ltkB))) )
  ]->
   [ Out( h((pk(~ltkA)⊕pk(~ltkB))) ), !F_AgenPSK( h((pk(~ltkA)⊕pk(~ltkB))) )
   ]

  /*
  rule (modulo AC) DefaultPSKGen:
     [ !F_AgentKey( ~ltkA ), !F_AgentKey( ~ltkB ) ]
    --[
    DefaultPSK( pk(~ltkA), h(z) ), DefaultPSK( pk(~ltkB), h(z) ),
    Reveal_PSK( h(z) )
    ]->
     [ Out( h(z) ), !F_AgenPSK( h(z) ) ]
    variants (modulo AC)
    1. ~ltkA = ~ltkA.4
       ~ltkB = ~ltkB.4
       z     = (pk(~ltkA.4)⊕pk(~ltkB.4))
    
    2. ~ltkA = ~x.4
       ~ltkB = ~x.4
       z     = zero
  */

rule (modulo E) PSK_reveal:
   [ !F_AgentPSK( k ) ] --[ Reveal_PSK( k ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) AgentKey_reveal:
   [ !F_AgentKey( k ) ] --[ Reveal_AK( pk(k) ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) EphKey_reveal:
   [ !F_AgentEphKey( k ) ] --[ Reveal_EphK( pk(k) ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) Rnd_reveal:
   [ !F_AgentRand( k ) ] --[ Reveal_rnd( k ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) PRFK_reveal:
   [ !F_AgentPRFK( k ) ] --[ Reveal_prfk( k ) ]-> [ Out( k ) ]

  /* has exactly the trivial AC variant */

rule (modulo E) AddPublicKey:
   [
   !F_AgentKey( ~ltkA ), !F_AgentKey( ~ltkB ), !F_AgentPSK( ~psk ),
   !F_AgentPRFK( ~tpk ), Fr( ~id )
   ]
  -->
   [
   L_State( ~id, 'no_message_state' ),
   !F_StateInvariants( ~id, ~psk, ~ltkA, pk(~ltkB), ~tpk )
   ]

  /* has exactly the trivial AC variant */

rule (modulo E) Handshake_Init:
   [
   L_State( ~id, anything ),
   !F_StateInvariants( ~id, ~psk, ~ltkI, pkR, ~tpk ), Fr( ~r3 ), Fr( ~ekI ),
   Fr( ~sidI ), Fr( ~pkISurrogate )
   ]
  --[
  ISend( <pk(~ltkI), pkR, pk(~ekI), ~psk, prf(~tpk, ~r3)> ),
  Identity_Surrogate( ~pkISurrogate ), EphKey( ~ekI ),
  PRFGen( ~tpk, ~r3, prf(~tpk, ~r3) )
  ]->
   [
   L_State( ~id,
            <'init', ~sidI, ~ekI, 
             h(<h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '1'>), ~psk, '1'
               >), 
             h(<
                h(<h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>), 
                   aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '2'>),
                        <h(pk(~ltkI)), ~pkISurrogate>, h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>))
                  >), 
                aead(h(<h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '1'>), ~psk, 
                        '2'>),
                     <$ts, 'TAI64N'>,
                     h(<h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>), 
                        aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '2'>),
                             <h(pk(~ltkI)), ~pkISurrogate>, h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>))
                       >))
               >), 
             prf(~tpk, ~r3)>
   ),
   F_SolveInit( ~id, ~psk,
                <'init', ~sidI, ~ekI, 
                 h(<h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '1'>), ~psk, '1'
                   >), 
                 h(<
                    h(<h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>), 
                       aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '2'>),
                            <h(pk(~ltkI)), ~pkISurrogate>, h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>))
                      >), 
                    aead(h(<h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '1'>), ~psk, 
                            '2'>),
                         <$ts, 'TAI64N'>,
                         h(<h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>), 
                            aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '2'>),
                                 <h(pk(~ltkI)), ~pkISurrogate>, h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>))
                           >))
                   >), 
                 prf(~tpk, ~r3)>
   ),
   Out( <'1', ~sidI, aenc(prf(~tpk, ~r3), pkR), pk(~ekI), 
         aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '2'>),
              <h(pk(~ltkI)), ~pkISurrogate>,
              h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>)), 
         aead(h(<h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '1'>), ~psk, 
                 '2'>),
              <$ts, 'TAI64N'>,
              h(<h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>), 
                 aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk, ~r3), '2'>),
                      <h(pk(~ltkI)), ~pkISurrogate>, h(<h(<h('noise'), 'id', pkR>), pk(~ekI)>))
                >)), 
         $mac1, $mac2>
   ),
   !F_AgentEphKey( ~ekI ), !F_AgentRand( ~r3 )
   ]

  // loop breaker: [0]
  /* has exactly the trivial AC variant */

rule (modulo E) Handshake_Resp:
   [
   L_State( ~id, anything ),
   !F_StateInvariants( ~id, ~psk, ~ltkR, pkI, ~tpk ), Fr( ~sidR ),
   Fr( ~r1 ), Fr( ~r2 ),
   In( <'1', sidI, sct1, pekI, astat, ats, $mac1, $mac2> )
   ]
  --[
  RKeys( <pkI, pk(~ltkR), pekI, ~psk, 
          h(<
             h(<
                h(<
                   h(<
                      h(<h(<h(<h('noise'), pekI, '1'>), adec(sct1, ~ltkR), '1'>), ~psk, '1'>), 
                      aenc(prf(~tpk, ~r1), pkI), '1'>), 
                   prf(~tpk, ~r2), '1'>), 
                prf(~tpk, ~r1), '1'>), 
             ~psk, '1'>), 
          adec(sct1, ~ltkR), prf(~tpk, ~r1), prf(~tpk, ~r2)>
  ),
  Eq( fst(decrypt(astat,
                  h(<h(<h('noise'), pekI, '1'>), adec(sct1, ~ltkR), '2'>))),
      h(pkI)
  ),
  Eq( snd(decrypt(ats,
                  h(<h(<h(<h('noise'), pekI, '1'>), adec(sct1, ~ltkR), '1'>), ~psk, '2'
                    >))),
      'TAI64N'
  ),
  Eq( verify(astat, h(<h(<h('noise'), 'id', pk(~ltkR)>), pekI>),
             h(<h(<h('noise'), pekI, '1'>), adec(sct1, ~ltkR), '2'>)),
      true
  ),
  Eq( verify(ats, h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pekI>), astat>),
             h(<h(<h(<h('noise'), pekI, '1'>), adec(sct1, ~ltkR), '1'>), ~psk, '2'>)),
      true
  ),
  OnlyOnce( pkI, pk(~ltkR),
            fst(decrypt(ats,
                        h(<h(<h(<h('noise'), pekI, '1'>), adec(sct1, ~ltkR), '1'>), ~psk, '2'>)))
  ),
  PRFGen( ~tpk, ~r1, prf(~tpk, ~r1) ), PRFGen( ~tpk, ~r2, prf(~tpk, ~r2) )
  ]->
   [
   L_State( ~id,
            <'transport_unconfirmed', ~sidR, pekI, 
             h(<
                h(<
                   h(<
                      h(<
                         h(<h(<h(<h('noise'), pekI, '1'>), adec(sct1, ~ltkR), '1'>), ~psk, '1'>), 
                         aenc(prf(~tpk, ~r1), pkI), '1'>), 
                      prf(~tpk, ~r2), '1'>), 
                   prf(~tpk, ~r1), '1'>), 
                ~psk, '1'>), 
             adec(sct1, ~ltkR), prf(~tpk, ~r1), prf(~tpk, ~r2)>
   ),
   F_SolveResp( ~id, ~psk,
                <'transport_unconfirmed', ~sidR, pekI, 
                 h(<
                    h(<
                       h(<
                          h(<
                             h(<h(<h(<h('noise'), pekI, '1'>), adec(sct1, ~ltkR), '1'>), ~psk, '1'>), 
                             aenc(prf(~tpk, ~r1), pkI), '1'>), 
                          prf(~tpk, ~r2), '1'>), 
                       prf(~tpk, ~r1), '1'>), 
                    ~psk, '1'>), 
                 adec(sct1, ~ltkR), prf(~tpk, ~r1), prf(~tpk, ~r2)>
   ),
   Out( <'2', sidI, ~sidR, aenc(prf(~tpk, ~r1), pkI), 
         aenc(prf(~tpk, ~r2), pekI), 
         aead(h(<
                 h(<
                    h(<
                       h(<
                          h(<h(<h(<h('noise'), pekI, '1'>), adec(sct1, ~ltkR), '1'>), ~psk, '1'>), 
                          aenc(prf(~tpk, ~r1), pkI), '1'>), 
                       prf(~tpk, ~r2), '1'>), 
                    prf(~tpk, ~r1), '1'>), 
                 ~psk, '3'>),
              'e',
              h(<
                 h(<h(<h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pekI>), astat>), ats>), 
                    aenc(prf(~tpk, ~r1), pkI)>), 
                 h(<
                    h(<
                       h(<
                          h(<
                             h(<h(<h(<h('noise'), pekI, '1'>), adec(sct1, ~ltkR), '1'>), ~psk, '1'>), 
                             aenc(prf(~tpk, ~r1), pkI), '1'>), 
                          prf(~tpk, ~r2), '1'>), 
                       prf(~tpk, ~r1), '1'>), 
                    ~psk, '2'>)
                >)), 
         $mac1, $mac2>
   ),
   !F_AgentRand( ~r1 ), !F_AgentRand( ~r2 )
   ]

  // loop breaker: [0]
  /*
  rule (modulo AC) Handshake_Resp:
     [
     L_State( ~id, anything ),
     !F_StateInvariants( ~id, ~psk, ~ltkR, pkI, ~tpk ), Fr( ~sidR ),
     Fr( ~r1 ), Fr( ~r2 ),
     In( <'1', sidI, sct1, pekI, astat, ats, $mac1, $mac2> )
     ]
    --[
    RKeys( <pkI, pk(~ltkR), pekI, ~psk, 
            h(<
               h(<
                  h(<
                     h(<h(<h(<h(<h('noise'), pekI, '1'>), z, '1'>), ~psk, '1'>), 
                        aenc(prf(~tpk, ~r1), pkI), '1'>), 
                     prf(~tpk, ~r2), '1'>), 
                  prf(~tpk, ~r1), '1'>), 
               ~psk, '1'>), 
            z, prf(~tpk, ~r1), prf(~tpk, ~r2)>
    ),
    Eq( z.1, h(pkI) ), Eq( z.2, 'TAI64N' ), Eq( z.3, true ), Eq( z.4, true ),
    OnlyOnce( pkI, pk(~ltkR), z.5 ), PRFGen( ~tpk, ~r1, prf(~tpk, ~r1) ),
    PRFGen( ~tpk, ~r2, prf(~tpk, ~r2) )
    ]->
     [
     L_State( ~id,
              <'transport_unconfirmed', ~sidR, pekI, 
               h(<
                  h(<
                     h(<
                        h(<h(<h(<h(<h('noise'), pekI, '1'>), z, '1'>), ~psk, '1'>), 
                           aenc(prf(~tpk, ~r1), pkI), '1'>), 
                        prf(~tpk, ~r2), '1'>), 
                     prf(~tpk, ~r1), '1'>), 
                  ~psk, '1'>), 
               z, prf(~tpk, ~r1), prf(~tpk, ~r2)>
     ),
     F_SolveResp( ~id, ~psk,
                  <'transport_unconfirmed', ~sidR, pekI, 
                   h(<
                      h(<
                         h(<
                            h(<h(<h(<h(<h('noise'), pekI, '1'>), z, '1'>), ~psk, '1'>), 
                               aenc(prf(~tpk, ~r1), pkI), '1'>), 
                            prf(~tpk, ~r2), '1'>), 
                         prf(~tpk, ~r1), '1'>), 
                      ~psk, '1'>), 
                   z, prf(~tpk, ~r1), prf(~tpk, ~r2)>
     ),
     Out( <'2', sidI, ~sidR, aenc(prf(~tpk, ~r1), pkI), 
           aenc(prf(~tpk, ~r2), pekI), 
           aead(h(<
                   h(<
                      h(<
                         h(<h(<h(<h(<h('noise'), pekI, '1'>), z, '1'>), ~psk, '1'>), 
                            aenc(prf(~tpk, ~r1), pkI), '1'>), 
                         prf(~tpk, ~r2), '1'>), 
                      prf(~tpk, ~r1), '1'>), 
                   ~psk, '3'>),
                'e',
                h(<
                   h(<h(<h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pekI>), astat>), ats>), 
                      aenc(prf(~tpk, ~r1), pkI)>), 
                   h(<
                      h(<
                         h(<
                            h(<h(<h(<h(<h('noise'), pekI, '1'>), z, '1'>), ~psk, '1'>), 
                               aenc(prf(~tpk, ~r1), pkI), '1'>), 
                            prf(~tpk, ~r2), '1'>), 
                         prf(~tpk, ~r1), '1'>), 
                      ~psk, '2'>)
                  >)), 
           $mac1, $mac2>
     ),
     !F_AgentRand( ~r1 ), !F_AgentRand( ~r2 )
     ]
    variants (modulo AC)
     1. ~ltkR = ~ltkR.43
        ~psk  = ~psk.44
        astat = astat.50
        ats   = ats.51
        pekI  = pekI.52
        sct1  = sct1.54
        z     = adec(sct1.54, ~ltkR.43)
        z.1   = fst(decrypt(astat.50,
                            h(<h(<h('noise'), pekI.52, '1'>), adec(sct1.54, ~ltkR.43), '2'>)))
        z.2   = snd(decrypt(ats.51,
                            h(<h(<h(<h('noise'), pekI.52, '1'>), adec(sct1.54, ~ltkR.43), '1'>), 
                               ~psk.44, '2'>)))
        z.3   = verify(astat.50,
                       h(<h(<h('noise'), 'id', pk(~ltkR.43)>), pekI.52>),
                       h(<h(<h('noise'), pekI.52, '1'>), adec(sct1.54, ~ltkR.43), '2'>))
        z.4   = verify(ats.51,
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.43)>), pekI.52>), astat.50>),
                       h(<h(<h(<h('noise'), pekI.52, '1'>), adec(sct1.54, ~ltkR.43), '1'>), 
                          ~psk.44, '2'>))
        z.5   = fst(decrypt(ats.51,
                            h(<h(<h(<h('noise'), pekI.52, '1'>), adec(sct1.54, ~ltkR.43), '1'>), 
                               ~psk.44, '2'>)))
    
     2. ~ltkR = ~ltkR.48
        ~psk  = ~psk.49
        astat = astat.55
        ats   = ats.56
        pekI  = pekI.57
        sct1  = aenc(z.64, pk(~ltkR.48))
        z     = z.64
        z.1   = fst(decrypt(astat.55,
                            h(<h(<h('noise'), pekI.57, '1'>), z.64, '2'>)))
        z.2   = snd(decrypt(ats.56,
                            h(<h(<h(<h('noise'), pekI.57, '1'>), z.64, '1'>), ~psk.49, '2'>)))
        z.3   = verify(astat.55,
                       h(<h(<h('noise'), 'id', pk(~ltkR.48)>), pekI.57>),
                       h(<h(<h('noise'), pekI.57, '1'>), z.64, '2'>))
        z.4   = verify(ats.56,
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.48)>), pekI.57>), astat.55>),
                       h(<h(<h(<h('noise'), pekI.57, '1'>), z.64, '1'>), ~psk.49, '2'>))
        z.5   = fst(decrypt(ats.56,
                            h(<h(<h(<h('noise'), pekI.57, '1'>), z.64, '1'>), ~psk.49, '2'>)))
    
     3. ~ltkR = ~ltkR.58
        ~psk  = ~psk.59
        astat = astat.65
        ats   = aead(h(<h(<h(<h('noise'), pekI.67, '1'>), z.74, '1'>), ~psk.59, 
                        '2'>),
                     <z.84, z.80>,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.58)>), pekI.67>), astat.65>))
        pekI  = pekI.67
        sct1  = aenc(z.74, pk(~ltkR.58))
        z     = z.74
        z.1   = fst(decrypt(astat.65,
                            h(<h(<h('noise'), pekI.67, '1'>), z.74, '2'>)))
        z.2   = z.80
        z.3   = verify(astat.65,
                       h(<h(<h('noise'), 'id', pk(~ltkR.58)>), pekI.67>),
                       h(<h(<h('noise'), pekI.67, '1'>), z.74, '2'>))
        z.4   = true
        z.5   = z.84
    
     4. ~ltkR = ~ltkR.58
        ~psk  = ~psk.59
        astat = astat.65
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.67, '1'>), adec(sct1.69, ~ltkR.58), '1'>), 
                        ~psk.59, '2'>),
                     <z.84, z.80>,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.58)>), pekI.67>), astat.65>))
        pekI  = pekI.67
        sct1  = sct1.69
        z     = adec(sct1.69, ~ltkR.58)
        z.1   = fst(decrypt(astat.65,
                            h(<h(<h('noise'), pekI.67, '1'>), adec(sct1.69, ~ltkR.58), '2'>)))
        z.2   = z.80
        z.3   = verify(astat.65,
                       h(<h(<h('noise'), 'id', pk(~ltkR.58)>), pekI.67>),
                       h(<h(<h('noise'), pekI.67, '1'>), adec(sct1.69, ~ltkR.58), '2'>))
        z.4   = true
        z.5   = z.84
    
     5. ~ltkR = ~ltkR.230
        ~psk  = ~psk.231
        astat = aead(h(<h(<h('noise'), pekI.239, '1'>), z.246, '2'>), x.455,
                     h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>))
        ats   = ats.238
        pekI  = pekI.239
        sct1  = aenc(z.246, pk(~ltkR.230))
        z     = z.246
        z.1   = fst(x.455)
        z.2   = snd(decrypt(ats.238,
                            h(<h(<h(<h('noise'), pekI.239, '1'>), z.246, '1'>), ~psk.231, '2'>)))
        z.3   = true
        z.4   = verify(ats.238,
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>), 
                          aead(h(<h(<h('noise'), pekI.239, '1'>), z.246, '2'>), x.455,
                               h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>))
                         >),
                       h(<h(<h(<h('noise'), pekI.239, '1'>), z.246, '1'>), ~psk.231, '2'>))
        z.5   = fst(decrypt(ats.238,
                            h(<h(<h(<h('noise'), pekI.239, '1'>), z.246, '1'>), ~psk.231, '2'>)))
    
     6. ~ltkR = ~ltkR.230
        ~psk  = ~psk.231
        astat = aead(h(<h(<h('noise'), pekI.239, '1'>), z.246, '2'>), x.455,
                     h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>))
        ats   = aead(h(<h(<h(<h('noise'), pekI.239, '1'>), z.246, '1'>), 
                        ~psk.231, '2'>),
                     <z.256, z.252>,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>), 
                        aead(h(<h(<h('noise'), pekI.239, '1'>), z.246, '2'>), x.455,
                             h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>))
                       >))
        pekI  = pekI.239
        sct1  = aenc(z.246, pk(~ltkR.230))
        z     = z.246
        z.1   = fst(x.455)
        z.2   = z.252
        z.3   = true
        z.4   = true
        z.5   = z.256
    
     7. ~ltkR = ~ltkR.230
        ~psk  = ~psk.231
        astat = aead(h(<h(<h('noise'), pekI.239, '1'>), 
                        adec(sct1.241, ~ltkR.230), '2'>),
                     x.455, h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>))
        ats   = ats.238
        pekI  = pekI.239
        sct1  = sct1.241
        z     = adec(sct1.241, ~ltkR.230)
        z.1   = fst(x.455)
        z.2   = snd(decrypt(ats.238,
                            h(<h(<h(<h('noise'), pekI.239, '1'>), adec(sct1.241, ~ltkR.230), '1'>), 
                               ~psk.231, '2'>)))
        z.3   = true
        z.4   = verify(ats.238,
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>), 
                          aead(h(<h(<h('noise'), pekI.239, '1'>), adec(sct1.241, ~ltkR.230), '2'>),
                               x.455, h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>))
                         >),
                       h(<h(<h(<h('noise'), pekI.239, '1'>), adec(sct1.241, ~ltkR.230), '1'>), 
                          ~psk.231, '2'>))
        z.5   = fst(decrypt(ats.238,
                            h(<h(<h(<h('noise'), pekI.239, '1'>), adec(sct1.241, ~ltkR.230), '1'>), 
                               ~psk.231, '2'>)))
    
     8. ~ltkR = ~ltkR.230
        ~psk  = ~psk.231
        astat = aead(h(<h(<h('noise'), pekI.239, '1'>), 
                        adec(sct1.241, ~ltkR.230), '2'>),
                     x.455, h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>))
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.239, '1'>), adec(sct1.241, ~ltkR.230), '1'>), 
                        ~psk.231, '2'>),
                     <z.256, z.252>,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>), 
                        aead(h(<h(<h('noise'), pekI.239, '1'>), adec(sct1.241, ~ltkR.230), '2'>),
                             x.455, h(<h(<h('noise'), 'id', pk(~ltkR.230)>), pekI.239>))
                       >))
        pekI  = pekI.239
        sct1  = sct1.241
        z     = adec(sct1.241, ~ltkR.230)
        z.1   = fst(x.455)
        z.2   = z.252
        z.3   = true
        z.4   = true
        z.5   = z.256
    
     9. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = astat.238
        ats   = aead(h(<h(<h(<h('noise'), pekI.240, '1'>), z.247, '1'>), 
                        ~psk.232, '2'>),
                     x.457,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), astat.238>))
        pekI  = pekI.240
        sct1  = aenc(z.247, pk(~ltkR.231))
        z     = z.247
        z.1   = fst(decrypt(astat.238,
                            h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>)))
        z.2   = snd(x.457)
        z.3   = verify(astat.238,
                       h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>),
                       h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>))
        z.4   = true
        z.5   = fst(x.457)
    
    10. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = astat.238
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '1'>), 
                        ~psk.232, '2'>),
                     x.457,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), astat.238>))
        pekI  = pekI.240
        sct1  = sct1.242
        z     = adec(sct1.242, ~ltkR.231)
        z.1   = fst(decrypt(astat.238,
                            h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '2'>)))
        z.2   = snd(x.457)
        z.3   = verify(astat.238,
                       h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>),
                       h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '2'>))
        z.4   = true
        z.5   = fst(x.457)
    
    11. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>), x.456,
                     x.457)
        ats   = ats.239
        pekI  = pekI.240
        sct1  = aenc(z.247, pk(~ltkR.231))
        z     = z.247
        z.1   = fst(x.456)
        z.2   = snd(decrypt(ats.239,
                            h(<h(<h(<h('noise'), pekI.240, '1'>), z.247, '1'>), ~psk.232, '2'>)))
        z.3   = verify(aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>),
                            x.456, x.457),
                       h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>),
                       h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>))
        z.4   = verify(ats.239,
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), 
                          aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>), x.456, x.457)>),
                       h(<h(<h(<h('noise'), pekI.240, '1'>), z.247, '1'>), ~psk.232, '2'>))
        z.5   = fst(decrypt(ats.239,
                            h(<h(<h(<h('noise'), pekI.240, '1'>), z.247, '1'>), ~psk.232, '2'>)))
    
    12. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>), x.456,
                     x.457)
        ats   = aead(h(<h(<h(<h('noise'), pekI.240, '1'>), z.247, '1'>), 
                        ~psk.232, '2'>),
                     <z.257, z.253>,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), 
                        aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>), x.456, x.457)>))
        pekI  = pekI.240
        sct1  = aenc(z.247, pk(~ltkR.231))
        z     = z.247
        z.1   = fst(x.456)
        z.2   = z.253
        z.3   = verify(aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>),
                            x.456, x.457),
                       h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>),
                       h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>))
        z.4   = true
        z.5   = z.257
    
    13. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>), x.456,
                     h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
        ats   = aead(h(<h(<h(<h('noise'), pekI.240, '1'>), z.247, '1'>), 
                        ~psk.232, '2'>),
                     x.457,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), 
                        aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>), x.456,
                             h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
                       >))
        pekI  = pekI.240
        sct1  = aenc(z.247, pk(~ltkR.231))
        z     = z.247
        z.1   = fst(x.456)
        z.2   = snd(x.457)
        z.3   = true
        z.4   = true
        z.5   = fst(x.457)
    
    14. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>),
                     <z.252, x.457>, h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
        ats   = ats.239
        pekI  = pekI.240
        sct1  = aenc(z.247, pk(~ltkR.231))
        z     = z.247
        z.1   = z.252
        z.2   = snd(decrypt(ats.239,
                            h(<h(<h(<h('noise'), pekI.240, '1'>), z.247, '1'>), ~psk.232, '2'>)))
        z.3   = true
        z.4   = verify(ats.239,
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), 
                          aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>), <z.252, x.457>,
                               h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
                         >),
                       h(<h(<h(<h('noise'), pekI.240, '1'>), z.247, '1'>), ~psk.232, '2'>))
        z.5   = fst(decrypt(ats.239,
                            h(<h(<h(<h('noise'), pekI.240, '1'>), z.247, '1'>), ~psk.232, '2'>)))
    
    15. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>),
                     <z.252, x.457>, h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
        ats   = aead(h(<h(<h(<h('noise'), pekI.240, '1'>), z.247, '1'>), 
                        ~psk.232, '2'>),
                     <z.257, z.253>,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), 
                        aead(h(<h(<h('noise'), pekI.240, '1'>), z.247, '2'>), <z.252, x.457>,
                             h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
                       >))
        pekI  = pekI.240
        sct1  = aenc(z.247, pk(~ltkR.231))
        z     = z.247
        z.1   = z.252
        z.2   = z.253
        z.3   = true
        z.4   = true
        z.5   = z.257
    
    16. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = aead(h(<h(<h('noise'), pekI.240, '1'>), 
                        adec(sct1.242, ~ltkR.231), '2'>),
                     x.456, x.457)
        ats   = ats.239
        pekI  = pekI.240
        sct1  = sct1.242
        z     = adec(sct1.242, ~ltkR.231)
        z.1   = fst(x.456)
        z.2   = snd(decrypt(ats.239,
                            h(<h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '1'>), 
                               ~psk.232, '2'>)))
        z.3   = verify(aead(h(<h(<h('noise'), pekI.240, '1'>), 
                               adec(sct1.242, ~ltkR.231), '2'>),
                            x.456, x.457),
                       h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>),
                       h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '2'>))
        z.4   = verify(ats.239,
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), 
                          aead(h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '2'>),
                               x.456, x.457)
                         >),
                       h(<h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '1'>), 
                          ~psk.232, '2'>))
        z.5   = fst(decrypt(ats.239,
                            h(<h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '1'>), 
                               ~psk.232, '2'>)))
    
    17. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = aead(h(<h(<h('noise'), pekI.240, '1'>), 
                        adec(sct1.242, ~ltkR.231), '2'>),
                     x.456, x.457)
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '1'>), 
                        ~psk.232, '2'>),
                     <z.257, z.253>,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), 
                        aead(h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '2'>),
                             x.456, x.457)
                       >))
        pekI  = pekI.240
        sct1  = sct1.242
        z     = adec(sct1.242, ~ltkR.231)
        z.1   = fst(x.456)
        z.2   = z.253
        z.3   = verify(aead(h(<h(<h('noise'), pekI.240, '1'>), 
                               adec(sct1.242, ~ltkR.231), '2'>),
                            x.456, x.457),
                       h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>),
                       h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '2'>))
        z.4   = true
        z.5   = z.257
    
    18. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = aead(h(<h(<h('noise'), pekI.240, '1'>), 
                        adec(sct1.242, ~ltkR.231), '2'>),
                     x.456, h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '1'>), 
                        ~psk.232, '2'>),
                     x.457,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), 
                        aead(h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '2'>),
                             x.456, h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
                       >))
        pekI  = pekI.240
        sct1  = sct1.242
        z     = adec(sct1.242, ~ltkR.231)
        z.1   = fst(x.456)
        z.2   = snd(x.457)
        z.3   = true
        z.4   = true
        z.5   = fst(x.457)
    
    19. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = aead(h(<h(<h('noise'), pekI.240, '1'>), 
                        adec(sct1.242, ~ltkR.231), '2'>),
                     <z.252, x.457>, h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
        ats   = ats.239
        pekI  = pekI.240
        sct1  = sct1.242
        z     = adec(sct1.242, ~ltkR.231)
        z.1   = z.252
        z.2   = snd(decrypt(ats.239,
                            h(<h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '1'>), 
                               ~psk.232, '2'>)))
        z.3   = true
        z.4   = verify(ats.239,
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), 
                          aead(h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '2'>),
                               <z.252, x.457>, h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
                         >),
                       h(<h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '1'>), 
                          ~psk.232, '2'>))
        z.5   = fst(decrypt(ats.239,
                            h(<h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '1'>), 
                               ~psk.232, '2'>)))
    
    20. ~ltkR = ~ltkR.231
        ~psk  = ~psk.232
        astat = aead(h(<h(<h('noise'), pekI.240, '1'>), 
                        adec(sct1.242, ~ltkR.231), '2'>),
                     <z.252, x.457>, h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '1'>), 
                        ~psk.232, '2'>),
                     <z.257, z.253>,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>), 
                        aead(h(<h(<h('noise'), pekI.240, '1'>), adec(sct1.242, ~ltkR.231), '2'>),
                             <z.252, x.457>, h(<h(<h('noise'), 'id', pk(~ltkR.231)>), pekI.240>))
                       >))
        pekI  = pekI.240
        sct1  = sct1.242
        z     = adec(sct1.242, ~ltkR.231)
        z.1   = z.252
        z.2   = z.253
        z.3   = true
        z.4   = true
        z.5   = z.257
    
    21. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = astat.239
        ats   = aead(h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), 
                        ~psk.233, '2'>),
                     x.458, x.459)
        pekI  = pekI.241
        sct1  = aenc(z.248, pk(~ltkR.232))
        z     = z.248
        z.1   = fst(decrypt(astat.239,
                            h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>)))
        z.2   = snd(x.458)
        z.3   = verify(astat.239,
                       h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>),
                       h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>))
        z.4   = verify(aead(h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), 
                               ~psk.233, '2'>),
                            x.458, x.459),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), astat.239>),
                       h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), ~psk.233, '2'>))
        z.5   = fst(x.458)
    
    22. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = astat.239
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                        ~psk.233, '2'>),
                     x.458, x.459)
        pekI  = pekI.241
        sct1  = sct1.243
        z     = adec(sct1.243, ~ltkR.232)
        z.1   = fst(decrypt(astat.239,
                            h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '2'>)))
        z.2   = snd(x.458)
        z.3   = verify(astat.239,
                       h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>),
                       h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '2'>))
        z.4   = verify(aead(h(<
                               h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                               ~psk.233, '2'>),
                            x.458, x.459),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), astat.239>),
                       h(<h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                          ~psk.233, '2'>))
        z.5   = fst(x.458)
    
    23. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>), x.457,
                     x.458)
        ats   = aead(h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), 
                        ~psk.233, '2'>),
                     x.459,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), 
                        aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>), x.457, x.458)>))
        pekI  = pekI.241
        sct1  = aenc(z.248, pk(~ltkR.232))
        z     = z.248
        z.1   = fst(x.457)
        z.2   = snd(x.459)
        z.3   = verify(aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>),
                            x.457, x.458),
                       h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>),
                       h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>))
        z.4   = true
        z.5   = fst(x.459)
    
    24. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>), x.457,
                     h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>))
        ats   = aead(h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), 
                        ~psk.233, '2'>),
                     x.458, x.459)
        pekI  = pekI.241
        sct1  = aenc(z.248, pk(~ltkR.232))
        z     = z.248
        z.1   = fst(x.457)
        z.2   = snd(x.458)
        z.3   = true
        z.4   = verify(aead(h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), 
                               ~psk.233, '2'>),
                            x.458, x.459),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), 
                          aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>), x.457,
                               h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>))
                         >),
                       h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), ~psk.233, '2'>))
        z.5   = fst(x.458)
    
    25. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>),
                     <z.253, x.458>, x.459)
        ats   = ats.240
        pekI  = pekI.241
        sct1  = aenc(z.248, pk(~ltkR.232))
        z     = z.248
        z.1   = z.253
        z.2   = snd(decrypt(ats.240,
                            h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), ~psk.233, '2'>)))
        z.3   = verify(aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>),
                            <z.253, x.458>, x.459),
                       h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>),
                       h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>))
        z.4   = verify(ats.240,
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), 
                          aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>), <z.253, x.458>,
                               x.459)
                         >),
                       h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), ~psk.233, '2'>))
        z.5   = fst(decrypt(ats.240,
                            h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), ~psk.233, '2'>)))
    
    26. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>),
                     <z.253, x.458>, x.459)
        ats   = aead(h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), 
                        ~psk.233, '2'>),
                     <z.258, z.254>,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), 
                        aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>), <z.253, x.458>,
                             x.459)
                       >))
        pekI  = pekI.241
        sct1  = aenc(z.248, pk(~ltkR.232))
        z     = z.248
        z.1   = z.253
        z.2   = z.254
        z.3   = verify(aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>),
                            <z.253, x.458>, x.459),
                       h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>),
                       h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>))
        z.4   = true
        z.5   = z.258
    
    27. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>),
                     <z.253, x.458>, h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>))
        ats   = aead(h(<h(<h(<h('noise'), pekI.241, '1'>), z.248, '1'>), 
                        ~psk.233, '2'>),
                     x.459,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), 
                        aead(h(<h(<h('noise'), pekI.241, '1'>), z.248, '2'>), <z.253, x.458>,
                             h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>))
                       >))
        pekI  = pekI.241
        sct1  = aenc(z.248, pk(~ltkR.232))
        z     = z.248
        z.1   = z.253
        z.2   = snd(x.459)
        z.3   = true
        z.4   = true
        z.5   = fst(x.459)
    
    28. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = aead(h(<h(<h('noise'), pekI.241, '1'>), 
                        adec(sct1.243, ~ltkR.232), '2'>),
                     x.457, x.458)
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                        ~psk.233, '2'>),
                     x.459,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), 
                        aead(h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '2'>),
                             x.457, x.458)
                       >))
        pekI  = pekI.241
        sct1  = sct1.243
        z     = adec(sct1.243, ~ltkR.232)
        z.1   = fst(x.457)
        z.2   = snd(x.459)
        z.3   = verify(aead(h(<h(<h('noise'), pekI.241, '1'>), 
                               adec(sct1.243, ~ltkR.232), '2'>),
                            x.457, x.458),
                       h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>),
                       h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '2'>))
        z.4   = true
        z.5   = fst(x.459)
    
    29. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = aead(h(<h(<h('noise'), pekI.241, '1'>), 
                        adec(sct1.243, ~ltkR.232), '2'>),
                     x.457, h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>))
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                        ~psk.233, '2'>),
                     x.458, x.459)
        pekI  = pekI.241
        sct1  = sct1.243
        z     = adec(sct1.243, ~ltkR.232)
        z.1   = fst(x.457)
        z.2   = snd(x.458)
        z.3   = true
        z.4   = verify(aead(h(<
                               h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                               ~psk.233, '2'>),
                            x.458, x.459),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), 
                          aead(h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '2'>),
                               x.457, h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>))
                         >),
                       h(<h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                          ~psk.233, '2'>))
        z.5   = fst(x.458)
    
    30. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = aead(h(<h(<h('noise'), pekI.241, '1'>), 
                        adec(sct1.243, ~ltkR.232), '2'>),
                     <z.253, x.458>, x.459)
        ats   = ats.240
        pekI  = pekI.241
        sct1  = sct1.243
        z     = adec(sct1.243, ~ltkR.232)
        z.1   = z.253
        z.2   = snd(decrypt(ats.240,
                            h(<h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                               ~psk.233, '2'>)))
        z.3   = verify(aead(h(<h(<h('noise'), pekI.241, '1'>), 
                               adec(sct1.243, ~ltkR.232), '2'>),
                            <z.253, x.458>, x.459),
                       h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>),
                       h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '2'>))
        z.4   = verify(ats.240,
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), 
                          aead(h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '2'>),
                               <z.253, x.458>, x.459)
                         >),
                       h(<h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                          ~psk.233, '2'>))
        z.5   = fst(decrypt(ats.240,
                            h(<h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                               ~psk.233, '2'>)))
    
    31. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = aead(h(<h(<h('noise'), pekI.241, '1'>), 
                        adec(sct1.243, ~ltkR.232), '2'>),
                     <z.253, x.458>, x.459)
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                        ~psk.233, '2'>),
                     <z.258, z.254>,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), 
                        aead(h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '2'>),
                             <z.253, x.458>, x.459)
                       >))
        pekI  = pekI.241
        sct1  = sct1.243
        z     = adec(sct1.243, ~ltkR.232)
        z.1   = z.253
        z.2   = z.254
        z.3   = verify(aead(h(<h(<h('noise'), pekI.241, '1'>), 
                               adec(sct1.243, ~ltkR.232), '2'>),
                            <z.253, x.458>, x.459),
                       h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>),
                       h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '2'>))
        z.4   = true
        z.5   = z.258
    
    32. ~ltkR = ~ltkR.232
        ~psk  = ~psk.233
        astat = aead(h(<h(<h('noise'), pekI.241, '1'>), 
                        adec(sct1.243, ~ltkR.232), '2'>),
                     <z.253, x.458>, h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>))
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '1'>), 
                        ~psk.233, '2'>),
                     x.459,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>), 
                        aead(h(<h(<h('noise'), pekI.241, '1'>), adec(sct1.243, ~ltkR.232), '2'>),
                             <z.253, x.458>, h(<h(<h('noise'), 'id', pk(~ltkR.232)>), pekI.241>))
                       >))
        pekI  = pekI.241
        sct1  = sct1.243
        z     = adec(sct1.243, ~ltkR.232)
        z.1   = z.253
        z.2   = snd(x.459)
        z.3   = true
        z.4   = true
        z.5   = fst(x.459)
    
    33. ~ltkR = ~ltkR.233
        ~psk  = ~psk.234
        astat = astat.240
        ats   = aead(h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), 
                        ~psk.234, '2'>),
                     <z.259, z.255>, x.461)
        pekI  = pekI.242
        sct1  = aenc(z.249, pk(~ltkR.233))
        z     = z.249
        z.1   = fst(decrypt(astat.240,
                            h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>)))
        z.2   = z.255
        z.3   = verify(astat.240,
                       h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>),
                       h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>))
        z.4   = verify(aead(h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), 
                               ~psk.234, '2'>),
                            <z.259, z.255>, x.461),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>), astat.240>),
                       h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), ~psk.234, '2'>))
        z.5   = z.259
    
    34. ~ltkR = ~ltkR.233
        ~psk  = ~psk.234
        astat = astat.240
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                        ~psk.234, '2'>),
                     <z.259, z.255>, x.461)
        pekI  = pekI.242
        sct1  = sct1.244
        z     = adec(sct1.244, ~ltkR.233)
        z.1   = fst(decrypt(astat.240,
                            h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '2'>)))
        z.2   = z.255
        z.3   = verify(astat.240,
                       h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>),
                       h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '2'>))
        z.4   = verify(aead(h(<
                               h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                               ~psk.234, '2'>),
                            <z.259, z.255>, x.461),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>), astat.240>),
                       h(<h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                          ~psk.234, '2'>))
        z.5   = z.259
    
    35. ~ltkR = ~ltkR.233
        ~psk  = ~psk.234
        astat = aead(h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>), x.458,
                     x.459)
        ats   = aead(h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), 
                        ~psk.234, '2'>),
                     x.460, x.461)
        pekI  = pekI.242
        sct1  = aenc(z.249, pk(~ltkR.233))
        z     = z.249
        z.1   = fst(x.458)
        z.2   = snd(x.460)
        z.3   = verify(aead(h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>),
                            x.458, x.459),
                       h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>),
                       h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>))
        z.4   = verify(aead(h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), 
                               ~psk.234, '2'>),
                            x.460, x.461),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>), 
                          aead(h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>), x.458, x.459)>),
                       h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), ~psk.234, '2'>))
        z.5   = fst(x.460)
    
    36. ~ltkR = ~ltkR.233
        ~psk  = ~psk.234
        astat = aead(h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>), x.458,
                     h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>))
        ats   = aead(h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), 
                        ~psk.234, '2'>),
                     <z.259, z.255>, x.461)
        pekI  = pekI.242
        sct1  = aenc(z.249, pk(~ltkR.233))
        z     = z.249
        z.1   = fst(x.458)
        z.2   = z.255
        z.3   = true
        z.4   = verify(aead(h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), 
                               ~psk.234, '2'>),
                            <z.259, z.255>, x.461),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>), 
                          aead(h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>), x.458,
                               h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>))
                         >),
                       h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), ~psk.234, '2'>))
        z.5   = z.259
    
    37. ~ltkR = ~ltkR.233
        ~psk  = ~psk.234
        astat = aead(h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>),
                     <z.254, x.459>, x.460)
        ats   = aead(h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), 
                        ~psk.234, '2'>),
                     x.461,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>), 
                        aead(h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>), <z.254, x.459>,
                             x.460)
                       >))
        pekI  = pekI.242
        sct1  = aenc(z.249, pk(~ltkR.233))
        z     = z.249
        z.1   = z.254
        z.2   = snd(x.461)
        z.3   = verify(aead(h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>),
                            <z.254, x.459>, x.460),
                       h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>),
                       h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>))
        z.4   = true
        z.5   = fst(x.461)
    
    38. ~ltkR = ~ltkR.233
        ~psk  = ~psk.234
        astat = aead(h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>),
                     <z.254, x.459>, h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>))
        ats   = aead(h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), 
                        ~psk.234, '2'>),
                     x.460, x.461)
        pekI  = pekI.242
        sct1  = aenc(z.249, pk(~ltkR.233))
        z     = z.249
        z.1   = z.254
        z.2   = snd(x.460)
        z.3   = true
        z.4   = verify(aead(h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), 
                               ~psk.234, '2'>),
                            x.460, x.461),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>), 
                          aead(h(<h(<h('noise'), pekI.242, '1'>), z.249, '2'>), <z.254, x.459>,
                               h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>))
                         >),
                       h(<h(<h(<h('noise'), pekI.242, '1'>), z.249, '1'>), ~psk.234, '2'>))
        z.5   = fst(x.460)
    
    39. ~ltkR = ~ltkR.233
        ~psk  = ~psk.234
        astat = aead(h(<h(<h('noise'), pekI.242, '1'>), 
                        adec(sct1.244, ~ltkR.233), '2'>),
                     x.458, x.459)
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                        ~psk.234, '2'>),
                     x.460, x.461)
        pekI  = pekI.242
        sct1  = sct1.244
        z     = adec(sct1.244, ~ltkR.233)
        z.1   = fst(x.458)
        z.2   = snd(x.460)
        z.3   = verify(aead(h(<h(<h('noise'), pekI.242, '1'>), 
                               adec(sct1.244, ~ltkR.233), '2'>),
                            x.458, x.459),
                       h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>),
                       h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '2'>))
        z.4   = verify(aead(h(<
                               h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                               ~psk.234, '2'>),
                            x.460, x.461),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>), 
                          aead(h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '2'>),
                               x.458, x.459)
                         >),
                       h(<h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                          ~psk.234, '2'>))
        z.5   = fst(x.460)
    
    40. ~ltkR = ~ltkR.233
        ~psk  = ~psk.234
        astat = aead(h(<h(<h('noise'), pekI.242, '1'>), 
                        adec(sct1.244, ~ltkR.233), '2'>),
                     x.458, h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>))
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                        ~psk.234, '2'>),
                     <z.259, z.255>, x.461)
        pekI  = pekI.242
        sct1  = sct1.244
        z     = adec(sct1.244, ~ltkR.233)
        z.1   = fst(x.458)
        z.2   = z.255
        z.3   = true
        z.4   = verify(aead(h(<
                               h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                               ~psk.234, '2'>),
                            <z.259, z.255>, x.461),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>), 
                          aead(h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '2'>),
                               x.458, h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>))
                         >),
                       h(<h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                          ~psk.234, '2'>))
        z.5   = z.259
    
    41. ~ltkR = ~ltkR.233
        ~psk  = ~psk.234
        astat = aead(h(<h(<h('noise'), pekI.242, '1'>), 
                        adec(sct1.244, ~ltkR.233), '2'>),
                     <z.254, x.459>, x.460)
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                        ~psk.234, '2'>),
                     x.461,
                     h(<h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>), 
                        aead(h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '2'>),
                             <z.254, x.459>, x.460)
                       >))
        pekI  = pekI.242
        sct1  = sct1.244
        z     = adec(sct1.244, ~ltkR.233)
        z.1   = z.254
        z.2   = snd(x.461)
        z.3   = verify(aead(h(<h(<h('noise'), pekI.242, '1'>), 
                               adec(sct1.244, ~ltkR.233), '2'>),
                            <z.254, x.459>, x.460),
                       h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>),
                       h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '2'>))
        z.4   = true
        z.5   = fst(x.461)
    
    42. ~ltkR = ~ltkR.233
        ~psk  = ~psk.234
        astat = aead(h(<h(<h('noise'), pekI.242, '1'>), 
                        adec(sct1.244, ~ltkR.233), '2'>),
                     <z.254, x.459>, h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>))
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                        ~psk.234, '2'>),
                     x.460, x.461)
        pekI  = pekI.242
        sct1  = sct1.244
        z     = adec(sct1.244, ~ltkR.233)
        z.1   = z.254
        z.2   = snd(x.460)
        z.3   = true
        z.4   = verify(aead(h(<
                               h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                               ~psk.234, '2'>),
                            x.460, x.461),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>), 
                          aead(h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '2'>),
                               <z.254, x.459>, h(<h(<h('noise'), 'id', pk(~ltkR.233)>), pekI.242>))
                         >),
                       h(<h(<h(<h('noise'), pekI.242, '1'>), adec(sct1.244, ~ltkR.233), '1'>), 
                          ~psk.234, '2'>))
        z.5   = fst(x.460)
    
    43. ~ltkR = ~ltkR.234
        ~psk  = ~psk.235
        astat = aead(h(<h(<h('noise'), pekI.243, '1'>), z.250, '2'>), x.459,
                     x.460)
        ats   = aead(h(<h(<h(<h('noise'), pekI.243, '1'>), z.250, '1'>), 
                        ~psk.235, '2'>),
                     <z.260, z.256>, x.463)
        pekI  = pekI.243
        sct1  = aenc(z.250, pk(~ltkR.234))
        z     = z.250
        z.1   = fst(x.459)
        z.2   = z.256
        z.3   = verify(aead(h(<h(<h('noise'), pekI.243, '1'>), z.250, '2'>),
                            x.459, x.460),
                       h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>),
                       h(<h(<h('noise'), pekI.243, '1'>), z.250, '2'>))
        z.4   = verify(aead(h(<h(<h(<h('noise'), pekI.243, '1'>), z.250, '1'>), 
                               ~psk.235, '2'>),
                            <z.260, z.256>, x.463),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>), 
                          aead(h(<h(<h('noise'), pekI.243, '1'>), z.250, '2'>), x.459, x.460)>),
                       h(<h(<h(<h('noise'), pekI.243, '1'>), z.250, '1'>), ~psk.235, '2'>))
        z.5   = z.260
    
    44. ~ltkR = ~ltkR.234
        ~psk  = ~psk.235
        astat = aead(h(<h(<h('noise'), pekI.243, '1'>), z.250, '2'>),
                     <z.255, x.460>, x.461)
        ats   = aead(h(<h(<h(<h('noise'), pekI.243, '1'>), z.250, '1'>), 
                        ~psk.235, '2'>),
                     x.462, x.463)
        pekI  = pekI.243
        sct1  = aenc(z.250, pk(~ltkR.234))
        z     = z.250
        z.1   = z.255
        z.2   = snd(x.462)
        z.3   = verify(aead(h(<h(<h('noise'), pekI.243, '1'>), z.250, '2'>),
                            <z.255, x.460>, x.461),
                       h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>),
                       h(<h(<h('noise'), pekI.243, '1'>), z.250, '2'>))
        z.4   = verify(aead(h(<h(<h(<h('noise'), pekI.243, '1'>), z.250, '1'>), 
                               ~psk.235, '2'>),
                            x.462, x.463),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>), 
                          aead(h(<h(<h('noise'), pekI.243, '1'>), z.250, '2'>), <z.255, x.460>,
                               x.461)
                         >),
                       h(<h(<h(<h('noise'), pekI.243, '1'>), z.250, '1'>), ~psk.235, '2'>))
        z.5   = fst(x.462)
    
    45. ~ltkR = ~ltkR.234
        ~psk  = ~psk.235
        astat = aead(h(<h(<h('noise'), pekI.243, '1'>), z.250, '2'>),
                     <z.255, x.460>, h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>))
        ats   = aead(h(<h(<h(<h('noise'), pekI.243, '1'>), z.250, '1'>), 
                        ~psk.235, '2'>),
                     <z.260, z.256>, x.463)
        pekI  = pekI.243
        sct1  = aenc(z.250, pk(~ltkR.234))
        z     = z.250
        z.1   = z.255
        z.2   = z.256
        z.3   = true
        z.4   = verify(aead(h(<h(<h(<h('noise'), pekI.243, '1'>), z.250, '1'>), 
                               ~psk.235, '2'>),
                            <z.260, z.256>, x.463),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>), 
                          aead(h(<h(<h('noise'), pekI.243, '1'>), z.250, '2'>), <z.255, x.460>,
                               h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>))
                         >),
                       h(<h(<h(<h('noise'), pekI.243, '1'>), z.250, '1'>), ~psk.235, '2'>))
        z.5   = z.260
    
    46. ~ltkR = ~ltkR.234
        ~psk  = ~psk.235
        astat = aead(h(<h(<h('noise'), pekI.243, '1'>), 
                        adec(sct1.245, ~ltkR.234), '2'>),
                     x.459, x.460)
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '1'>), 
                        ~psk.235, '2'>),
                     <z.260, z.256>, x.463)
        pekI  = pekI.243
        sct1  = sct1.245
        z     = adec(sct1.245, ~ltkR.234)
        z.1   = fst(x.459)
        z.2   = z.256
        z.3   = verify(aead(h(<h(<h('noise'), pekI.243, '1'>), 
                               adec(sct1.245, ~ltkR.234), '2'>),
                            x.459, x.460),
                       h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>),
                       h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '2'>))
        z.4   = verify(aead(h(<
                               h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '1'>), 
                               ~psk.235, '2'>),
                            <z.260, z.256>, x.463),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>), 
                          aead(h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '2'>),
                               x.459, x.460)
                         >),
                       h(<h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '1'>), 
                          ~psk.235, '2'>))
        z.5   = z.260
    
    47. ~ltkR = ~ltkR.234
        ~psk  = ~psk.235
        astat = aead(h(<h(<h('noise'), pekI.243, '1'>), 
                        adec(sct1.245, ~ltkR.234), '2'>),
                     <z.255, x.460>, x.461)
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '1'>), 
                        ~psk.235, '2'>),
                     x.462, x.463)
        pekI  = pekI.243
        sct1  = sct1.245
        z     = adec(sct1.245, ~ltkR.234)
        z.1   = z.255
        z.2   = snd(x.462)
        z.3   = verify(aead(h(<h(<h('noise'), pekI.243, '1'>), 
                               adec(sct1.245, ~ltkR.234), '2'>),
                            <z.255, x.460>, x.461),
                       h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>),
                       h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '2'>))
        z.4   = verify(aead(h(<
                               h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '1'>), 
                               ~psk.235, '2'>),
                            x.462, x.463),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>), 
                          aead(h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '2'>),
                               <z.255, x.460>, x.461)
                         >),
                       h(<h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '1'>), 
                          ~psk.235, '2'>))
        z.5   = fst(x.462)
    
    48. ~ltkR = ~ltkR.234
        ~psk  = ~psk.235
        astat = aead(h(<h(<h('noise'), pekI.243, '1'>), 
                        adec(sct1.245, ~ltkR.234), '2'>),
                     <z.255, x.460>, h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>))
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '1'>), 
                        ~psk.235, '2'>),
                     <z.260, z.256>, x.463)
        pekI  = pekI.243
        sct1  = sct1.245
        z     = adec(sct1.245, ~ltkR.234)
        z.1   = z.255
        z.2   = z.256
        z.3   = true
        z.4   = verify(aead(h(<
                               h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '1'>), 
                               ~psk.235, '2'>),
                            <z.260, z.256>, x.463),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>), 
                          aead(h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '2'>),
                               <z.255, x.460>, h(<h(<h('noise'), 'id', pk(~ltkR.234)>), pekI.243>))
                         >),
                       h(<h(<h(<h('noise'), pekI.243, '1'>), adec(sct1.245, ~ltkR.234), '1'>), 
                          ~psk.235, '2'>))
        z.5   = z.260
    
    49. ~ltkR = ~ltkR.235
        ~psk  = ~psk.236
        astat = aead(h(<h(<h('noise'), pekI.244, '1'>), z.251, '2'>),
                     <z.256, x.461>, x.462)
        ats   = aead(h(<h(<h(<h('noise'), pekI.244, '1'>), z.251, '1'>), 
                        ~psk.236, '2'>),
                     <z.261, z.257>, x.465)
        pekI  = pekI.244
        sct1  = aenc(z.251, pk(~ltkR.235))
        z     = z.251
        z.1   = z.256
        z.2   = z.257
        z.3   = verify(aead(h(<h(<h('noise'), pekI.244, '1'>), z.251, '2'>),
                            <z.256, x.461>, x.462),
                       h(<h(<h('noise'), 'id', pk(~ltkR.235)>), pekI.244>),
                       h(<h(<h('noise'), pekI.244, '1'>), z.251, '2'>))
        z.4   = verify(aead(h(<h(<h(<h('noise'), pekI.244, '1'>), z.251, '1'>), 
                               ~psk.236, '2'>),
                            <z.261, z.257>, x.465),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.235)>), pekI.244>), 
                          aead(h(<h(<h('noise'), pekI.244, '1'>), z.251, '2'>), <z.256, x.461>,
                               x.462)
                         >),
                       h(<h(<h(<h('noise'), pekI.244, '1'>), z.251, '1'>), ~psk.236, '2'>))
        z.5   = z.261
    
    50. ~ltkR = ~ltkR.235
        ~psk  = ~psk.236
        astat = aead(h(<h(<h('noise'), pekI.244, '1'>), 
                        adec(sct1.246, ~ltkR.235), '2'>),
                     <z.256, x.461>, x.462)
        ats   = aead(h(<
                        h(<h(<h('noise'), pekI.244, '1'>), adec(sct1.246, ~ltkR.235), '1'>), 
                        ~psk.236, '2'>),
                     <z.261, z.257>, x.465)
        pekI  = pekI.244
        sct1  = sct1.246
        z     = adec(sct1.246, ~ltkR.235)
        z.1   = z.256
        z.2   = z.257
        z.3   = verify(aead(h(<h(<h('noise'), pekI.244, '1'>), 
                               adec(sct1.246, ~ltkR.235), '2'>),
                            <z.256, x.461>, x.462),
                       h(<h(<h('noise'), 'id', pk(~ltkR.235)>), pekI.244>),
                       h(<h(<h('noise'), pekI.244, '1'>), adec(sct1.246, ~ltkR.235), '2'>))
        z.4   = verify(aead(h(<
                               h(<h(<h('noise'), pekI.244, '1'>), adec(sct1.246, ~ltkR.235), '1'>), 
                               ~psk.236, '2'>),
                            <z.261, z.257>, x.465),
                       h(<h(<h(<h('noise'), 'id', pk(~ltkR.235)>), pekI.244>), 
                          aead(h(<h(<h('noise'), pekI.244, '1'>), adec(sct1.246, ~ltkR.235), '2'>),
                               <z.256, x.461>, x.462)
                         >),
                       h(<h(<h(<h('noise'), pekI.244, '1'>), adec(sct1.246, ~ltkR.235), '1'>), 
                          ~psk.236, '2'>))
        z.5   = z.261
    // loop breaker: [0]
  */

rule (modulo E) Handshake_Complete:
   [
   L_State( ~id, <'init', sidI, ekI, ci2, hi2, kb> ),
   F_SolveInit( ~id, ~psk, <'init', sidI, ekI, ci2, hi2, kb> ),
   !F_StateInvariants( ~id, ~psk, ~ltkI, pkR, ~tpk ),
   In( <'2', sidI, sidR, sct, ect, aempt, $mac1, $mac2> )
   ]
  --[
  Eq( decrypt(aempt,
              h(<
                 h(<h(<h(<ci2, sct, '1'>), adec(ect, ekI), '1'>), adec(sct, ~ltkI), '1'
                   >), 
                 ~psk, '3'>)),
      'e'
  ),
  Eq( verify(aempt,
             h(<h(<hi2, sct>), 
                h(<
                   h(<h(<h(<ci2, sct, '1'>), adec(ect, ekI), '1'>), adec(sct, ~ltkI), '1'
                     >), 
                   ~psk, '2'>)
               >),
             h(<
                h(<h(<h(<ci2, sct, '1'>), adec(ect, ekI), '1'>), adec(sct, ~ltkI), '1'
                  >), 
                ~psk, '3'>)),
      true
  ),
  IKeys( <pk(~ltkI), pkR, pk(ekI), ~psk, 
          h(<
             h(<h(<h(<ci2, sct, '1'>), adec(ect, ekI), '1'>), adec(sct, ~ltkI), '1'
               >), 
             ~psk, '1'>), 
          kb, adec(sct, ~ltkI), adec(ect, ekI)>
  )
  ]->
   [
   L_State( ~id,
            <'transport', sidI, 
             h(<
                h(<h(<h(<ci2, sct, '1'>), adec(ect, ekI), '1'>), adec(sct, ~ltkI), '1'
                  >), 
                ~psk, '1'>)
            >
   ),
   Out( <'4', sidR, 
         aead(h(<
                 h(<h(<h(<ci2, sct, '1'>), adec(ect, ekI), '1'>), adec(sct, ~ltkI), '1'
                   >), 
                 ~psk, '1'>),
              'message', '0')
        >
   )
   ]

  /*
  rule (modulo AC) Handshake_Complete:
     [
     L_State( ~id, <'init', sidI, ekI, ci2, hi2, kb> ),
     F_SolveInit( ~id, ~psk, <'init', sidI, ekI, ci2, hi2, kb> ),
     !F_StateInvariants( ~id, ~psk, ~ltkI, pkR, ~tpk ),
     In( <'2', sidI, sidR, sct, ect, aempt, $mac1, $mac2> )
     ]
    --[
    Eq( z.2, 'e' ), Eq( z.3, true ),
    IKeys( <pk(~ltkI), pkR, pk(ekI), ~psk, 
            h(<h(<h(<h(<ci2, sct, '1'>), z, '1'>), z.1, '1'>), ~psk, '1'>), kb, z.1, 
            z>
    )
    ]->
     [
     L_State( ~id,
              <'transport', sidI, 
               h(<h(<h(<h(<ci2, sct, '1'>), z, '1'>), z.1, '1'>), ~psk, '1'>)>
     ),
     Out( <'4', sidR, 
           aead(h(<h(<h(<h(<ci2, sct, '1'>), z, '1'>), z.1, '1'>), ~psk, '1'>),
                'message', '0')
          >
     )
     ]
    variants (modulo AC)
     1. ~ltkI = ~ltkI.40
        ~psk  = ~psk.41
        aempt = aempt.43
        ci2   = ci2.44
        ect   = ect.45
        ekI   = ekI.46
        hi2   = hi2.47
        sct   = sct.50
        z     = adec(ect.45, ekI.46)
        z.1   = adec(sct.50, ~ltkI.40)
        z.2   = decrypt(aempt.43,
                        h(<
                           h(<h(<h(<ci2.44, sct.50, '1'>), adec(ect.45, ekI.46), '1'>), 
                              adec(sct.50, ~ltkI.40), '1'>), 
                           ~psk.41, '3'>))
        z.3   = verify(aempt.43,
                       h(<h(<hi2.47, sct.50>), 
                          h(<
                             h(<h(<h(<ci2.44, sct.50, '1'>), adec(ect.45, ekI.46), '1'>), 
                                adec(sct.50, ~ltkI.40), '1'>), 
                             ~psk.41, '2'>)
                         >),
                       h(<
                          h(<h(<h(<ci2.44, sct.50, '1'>), adec(ect.45, ekI.46), '1'>), 
                             adec(sct.50, ~ltkI.40), '1'>), 
                          ~psk.41, '3'>))
    
     2. ~ltkI = ~ltkI.47
        ~psk  = ~psk.48
        aempt = aempt.50
        ci2   = ci2.51
        ect   = aenc(z.64, pk(ekI.53))
        ekI   = ekI.53
        hi2   = hi2.54
        sct   = sct.57
        z     = z.64
        z.1   = adec(sct.57, ~ltkI.47)
        z.2   = decrypt(aempt.50,
                        h(<
                           h(<h(<h(<ci2.51, sct.57, '1'>), z.64, '1'>), adec(sct.57, ~ltkI.47), '1'
                             >), 
                           ~psk.48, '3'>))
        z.3   = verify(aempt.50,
                       h(<h(<hi2.54, sct.57>), 
                          h(<
                             h(<h(<h(<ci2.51, sct.57, '1'>), z.64, '1'>), adec(sct.57, ~ltkI.47), '1'
                               >), 
                             ~psk.48, '2'>)
                         >),
                       h(<
                          h(<h(<h(<ci2.51, sct.57, '1'>), z.64, '1'>), adec(sct.57, ~ltkI.47), '1'
                            >), 
                          ~psk.48, '3'>))
    
     3. ~ltkI = ~ltkI.48
        ~psk  = ~psk.49
        aempt = aempt.51
        ci2   = ci2.52
        ect   = ect.53
        ekI   = ekI.54
        hi2   = hi2.55
        sct   = aenc(z.66, pk(~ltkI.48))
        z     = adec(ect.53, ekI.54)
        z.1   = z.66
        z.2   = decrypt(aempt.51,
                        h(<
                           h(<
                              h(<h(<ci2.52, aenc(z.66, pk(~ltkI.48)), '1'>), adec(ect.53, ekI.54), '1'
                                >), 
                              z.66, '1'>), 
                           ~psk.49, '3'>))
        z.3   = verify(aempt.51,
                       h(<h(<hi2.55, aenc(z.66, pk(~ltkI.48))>), 
                          h(<
                             h(<
                                h(<h(<ci2.52, aenc(z.66, pk(~ltkI.48)), '1'>), adec(ect.53, ekI.54), '1'
                                  >), 
                                z.66, '1'>), 
                             ~psk.49, '2'>)
                         >),
                       h(<
                          h(<
                             h(<h(<ci2.52, aenc(z.66, pk(~ltkI.48)), '1'>), adec(ect.53, ekI.54), '1'
                               >), 
                             z.66, '1'>), 
                          ~psk.49, '3'>))
    
     4. ~ltkI = ~ltkI.48
        ~psk  = ~psk.49
        aempt = aempt.51
        ci2   = ci2.52
        ect   = aenc(z.65, pk(ekI.54))
        ekI   = ekI.54
        hi2   = hi2.55
        sct   = aenc(z.66, pk(~ltkI.48))
        z     = z.65
        z.1   = z.66
        z.2   = decrypt(aempt.51,
                        h(<
                           h(<h(<h(<ci2.52, aenc(z.66, pk(~ltkI.48)), '1'>), z.65, '1'>), z.66, '1'
                             >), 
                           ~psk.49, '3'>))
        z.3   = verify(aempt.51,
                       h(<h(<hi2.55, aenc(z.66, pk(~ltkI.48))>), 
                          h(<
                             h(<h(<h(<ci2.52, aenc(z.66, pk(~ltkI.48)), '1'>), z.65, '1'>), z.66, '1'
                               >), 
                             ~psk.49, '2'>)
                         >),
                       h(<
                          h(<h(<h(<ci2.52, aenc(z.66, pk(~ltkI.48)), '1'>), z.65, '1'>), z.66, '1'
                            >), 
                          ~psk.49, '3'>))
    
     5. ~ltkI = ~ltkI.52
        ~psk  = ~psk.53
        aempt = aead(h(<
                        h(<h(<h(<ci2.56, sct.62, '1'>), z.69, '1'>), adec(sct.62, ~ltkI.52), '1'
                          >), 
                        ~psk.53, '3'>),
                     z.74,
                     h(<h(<hi2.59, sct.62>), 
                        h(<
                           h(<h(<h(<ci2.56, sct.62, '1'>), z.69, '1'>), adec(sct.62, ~ltkI.52), '1'
                             >), 
                           ~psk.53, '2'>)
                       >))
        ci2   = ci2.56
        ect   = aenc(z.69, pk(ekI.58))
        ekI   = ekI.58
        hi2   = hi2.59
        sct   = sct.62
        z     = z.69
        z.1   = adec(sct.62, ~ltkI.52)
        z.2   = z.74
        z.3   = true
    
     6. ~ltkI = ~ltkI.52
        ~psk  = ~psk.53
        aempt = aead(h(<
                        h(<h(<h(<ci2.56, sct.62, '1'>), adec(ect.57, ekI.58), '1'>), 
                           adec(sct.62, ~ltkI.52), '1'>), 
                        ~psk.53, '3'>),
                     z.74,
                     h(<h(<hi2.59, sct.62>), 
                        h(<
                           h(<h(<h(<ci2.56, sct.62, '1'>), adec(ect.57, ekI.58), '1'>), 
                              adec(sct.62, ~ltkI.52), '1'>), 
                           ~psk.53, '2'>)
                       >))
        ci2   = ci2.56
        ect   = ect.57
        ekI   = ekI.58
        hi2   = hi2.59
        sct   = sct.62
        z     = adec(ect.57, ekI.58)
        z.1   = adec(sct.62, ~ltkI.52)
        z.2   = z.74
        z.3   = true
    
     7. ~ltkI = ~ltkI.52
        ~psk  = ~psk.53
        aempt = aead(h(<
                        h(<h(<h(<ci2.56, aenc(z.70, pk(~ltkI.52)), '1'>), z.69, '1'>), z.70, '1'
                          >), 
                        ~psk.53, '3'>),
                     z.74,
                     h(<h(<hi2.59, aenc(z.70, pk(~ltkI.52))>), 
                        h(<
                           h(<h(<h(<ci2.56, aenc(z.70, pk(~ltkI.52)), '1'>), z.69, '1'>), z.70, '1'
                             >), 
                           ~psk.53, '2'>)
                       >))
        ci2   = ci2.56
        ect   = aenc(z.69, pk(ekI.58))
        ekI   = ekI.58
        hi2   = hi2.59
        sct   = aenc(z.70, pk(~ltkI.52))
        z     = z.69
        z.1   = z.70
        z.2   = z.74
        z.3   = true
    
     8. ~ltkI = ~ltkI.52
        ~psk  = ~psk.53
        aempt = aead(h(<
                        h(<
                           h(<h(<ci2.56, aenc(z.70, pk(~ltkI.52)), '1'>), adec(ect.57, ekI.58), '1'
                             >), 
                           z.70, '1'>), 
                        ~psk.53, '3'>),
                     z.74,
                     h(<h(<hi2.59, aenc(z.70, pk(~ltkI.52))>), 
                        h(<
                           h(<
                              h(<h(<ci2.56, aenc(z.70, pk(~ltkI.52)), '1'>), adec(ect.57, ekI.58), '1'
                                >), 
                              z.70, '1'>), 
                           ~psk.53, '2'>)
                       >))
        ci2   = ci2.56
        ect   = ect.57
        ekI   = ekI.58
        hi2   = hi2.59
        sct   = aenc(z.70, pk(~ltkI.52))
        z     = adec(ect.57, ekI.58)
        z.1   = z.70
        z.2   = z.74
        z.3   = true
    
     9. ~ltkI = ~ltkI.212
        ~psk  = ~psk.213
        aempt = aead(h(<
                        h(<h(<h(<ci2.216, sct.222, '1'>), z.229, '1'>), 
                           adec(sct.222, ~ltkI.212), '1'>), 
                        ~psk.213, '3'>),
                     z.234, x.419)
        ci2   = ci2.216
        ect   = aenc(z.229, pk(ekI.218))
        ekI   = ekI.218
        hi2   = hi2.219
        sct   = sct.222
        z     = z.229
        z.1   = adec(sct.222, ~ltkI.212)
        z.2   = z.234
        z.3   = verify(aead(h(<
                               h(<h(<h(<ci2.216, sct.222, '1'>), z.229, '1'>), 
                                  adec(sct.222, ~ltkI.212), '1'>), 
                               ~psk.213, '3'>),
                            z.234, x.419),
                       h(<h(<hi2.219, sct.222>), 
                          h(<
                             h(<h(<h(<ci2.216, sct.222, '1'>), z.229, '1'>), 
                                adec(sct.222, ~ltkI.212), '1'>), 
                             ~psk.213, '2'>)
                         >),
                       h(<
                          h(<h(<h(<ci2.216, sct.222, '1'>), z.229, '1'>), 
                             adec(sct.222, ~ltkI.212), '1'>), 
                          ~psk.213, '3'>))
    
    10. ~ltkI = ~ltkI.212
        ~psk  = ~psk.213
        aempt = aead(h(<
                        h(<h(<h(<ci2.216, aenc(z.230, pk(~ltkI.212)), '1'>), z.229, '1'>), 
                           z.230, '1'>), 
                        ~psk.213, '3'>),
                     z.234, x.419)
        ci2   = ci2.216
        ect   = aenc(z.229, pk(ekI.218))
        ekI   = ekI.218
        hi2   = hi2.219
        sct   = aenc(z.230, pk(~ltkI.212))
        z     = z.229
        z.1   = z.230
        z.2   = z.234
        z.3   = verify(aead(h(<
                               h(<h(<h(<ci2.216, aenc(z.230, pk(~ltkI.212)), '1'>), z.229, '1'>), 
                                  z.230, '1'>), 
                               ~psk.213, '3'>),
                            z.234, x.419),
                       h(<h(<hi2.219, aenc(z.230, pk(~ltkI.212))>), 
                          h(<
                             h(<h(<h(<ci2.216, aenc(z.230, pk(~ltkI.212)), '1'>), z.229, '1'>), 
                                z.230, '1'>), 
                             ~psk.213, '2'>)
                         >),
                       h(<
                          h(<h(<h(<ci2.216, aenc(z.230, pk(~ltkI.212)), '1'>), z.229, '1'>), 
                             z.230, '1'>), 
                          ~psk.213, '3'>))
    
    11. ~ltkI = ~ltkI.213
        ~psk  = ~psk.214
        aempt = aead(h(<
                        h(<h(<h(<ci2.217, sct.223, '1'>), adec(ect.218, ekI.219), '1'>), 
                           adec(sct.223, ~ltkI.213), '1'>), 
                        ~psk.214, '3'>),
                     z.235, x.421)
        ci2   = ci2.217
        ect   = ect.218
        ekI   = ekI.219
        hi2   = hi2.220
        sct   = sct.223
        z     = adec(ect.218, ekI.219)
        z.1   = adec(sct.223, ~ltkI.213)
        z.2   = z.235
        z.3   = verify(aead(h(<
                               h(<h(<h(<ci2.217, sct.223, '1'>), adec(ect.218, ekI.219), '1'>), 
                                  adec(sct.223, ~ltkI.213), '1'>), 
                               ~psk.214, '3'>),
                            z.235, x.421),
                       h(<h(<hi2.220, sct.223>), 
                          h(<
                             h(<h(<h(<ci2.217, sct.223, '1'>), adec(ect.218, ekI.219), '1'>), 
                                adec(sct.223, ~ltkI.213), '1'>), 
                             ~psk.214, '2'>)
                         >),
                       h(<
                          h(<h(<h(<ci2.217, sct.223, '1'>), adec(ect.218, ekI.219), '1'>), 
                             adec(sct.223, ~ltkI.213), '1'>), 
                          ~psk.214, '3'>))
    
    12. ~ltkI = ~ltkI.213
        ~psk  = ~psk.214
        aempt = aead(h(<
                        h(<
                           h(<h(<ci2.217, aenc(z.231, pk(~ltkI.213)), '1'>), 
                              adec(ect.218, ekI.219), '1'>), 
                           z.231, '1'>), 
                        ~psk.214, '3'>),
                     z.235, x.421)
        ci2   = ci2.217
        ect   = ect.218
        ekI   = ekI.219
        hi2   = hi2.220
        sct   = aenc(z.231, pk(~ltkI.213))
        z     = adec(ect.218, ekI.219)
        z.1   = z.231
        z.2   = z.235
        z.3   = verify(aead(h(<
                               h(<
                                  h(<h(<ci2.217, aenc(z.231, pk(~ltkI.213)), '1'>), 
                                     adec(ect.218, ekI.219), '1'>), 
                                  z.231, '1'>), 
                               ~psk.214, '3'>),
                            z.235, x.421),
                       h(<h(<hi2.220, aenc(z.231, pk(~ltkI.213))>), 
                          h(<
                             h(<
                                h(<h(<ci2.217, aenc(z.231, pk(~ltkI.213)), '1'>), 
                                   adec(ect.218, ekI.219), '1'>), 
                                z.231, '1'>), 
                             ~psk.214, '2'>)
                         >),
                       h(<
                          h(<
                             h(<h(<ci2.217, aenc(z.231, pk(~ltkI.213)), '1'>), 
                                adec(ect.218, ekI.219), '1'>), 
                             z.231, '1'>), 
                          ~psk.214, '3'>))
  */

rule (modulo E) R_ConfirmedTransportMessage:
   [
   L_State( ~id, <'transport_unconfirmed', ~sidR, pekI, cr6, kb, ka, k> ),
   F_SolveResp( ~id, ~psk,
                <'transport_unconfirmed', ~sidR, pekI, cr6, kb, ka, k>
   ),
   !F_StateInvariants( ~id, ~psk, ~ltkR, pkI, ~tpk ),
   In( <'4', ~sidR, data> )
   ]
  --[
  Eq( verify(data, '0', cr6), true ),
  RConfirm( <pkI, pk(~ltkR), pekI, ~psk, cr6, kb, ka, k> )
  ]->
   [ L_State( ~id, <'transport', ~sidR, cr6> ) ]

  /*
  rule (modulo AC) R_ConfirmedTransportMessage:
     [
     L_State( ~id, <'transport_unconfirmed', ~sidR, pekI, cr6, kb, ka, k> ),
     F_SolveResp( ~id, ~psk,
                  <'transport_unconfirmed', ~sidR, pekI, cr6, kb, ka, k>
     ),
     !F_StateInvariants( ~id, ~psk, ~ltkR, pkI, ~tpk ),
     In( <'4', ~sidR, data> )
     ]
    --[
    Eq( z, true ), RConfirm( <pkI, pk(~ltkR), pekI, ~psk, cr6, kb, ka, k> )
    ]->
     [ L_State( ~id, <'transport', ~sidR, cr6> ) ]
    variants (modulo AC)
    1. cr6   = cr6.19
       data  = data.20
       z     = verify(data.20, '0', cr6.19)
    
    2. cr6   = cr6.41
       data  = aead(cr6.41, x.75, '0')
       z     = true
  */

lemma session_create:
  exists-trace
  "∃ pki pkr peki psk ck kb ka k #i #j.
    ((IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
     (RConfirm( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #j)) ∧
    (#i < #j)"
/*
guarded formula characterizing all satisfying traces:
"∃ pki pkr peki psk ck kb ka k #i #j.
  (IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
  (RConfirm( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #j)
 ∧
  #i < #j"
*/
by sorry

lemma session_key_collision [reuse]:
  all-traces
  "∀ pki1 pki2 pkr1 pkr2 peki1 peki2 psk1 psk2 ck kb1 kb2 ka1 ka2 k1 k2 r1
     r2 r3 tpk1 tpk2 #i #j #i1.
    ((((((IKeys( <pki1, pkr1, peki1, psk1, ck, kb1, ka1, k1> ) @ #i) ∧
         (RKeys( <pki2, pkr2, peki2, psk2, ck, kb2, ka2, k2> ) @ #j)) ∧
        (PRFGen( tpk1, r3, kb1 ) @ #i1)) ∧
       (#i1 < #i)) ∧
      (PRFGen( tpk2, r1, ka2 ) @ #j)) ∧
     (PRFGen( tpk2, r2, k2 ) @ #j)) ⇒
    (((((((psk1 = psk2) ∧ (kb1 = kb2)) ∧ (ka1 = ka2)) ∧ (k1 = k2)) ∧
       (peki1 = peki2)) ∧
      (pki1 = pki2)) ∧
     ((pkr1 = pkr2) ∨
      ((((∃ #j1. Reveal_AK( pkr1 ) @ #j1) ∨
         ((∃ #j1. Reveal_rnd( r3 ) @ #j1) ∧ (∃ #j1. Reveal_prfk( tpk1 ) @ #j1))) ∧
        ((∃ #j1. Reveal_AK( pki1 ) @ #j1) ∨
         ((∃ #j1. Reveal_rnd( r1 ) @ #j1) ∧
          (∃ #j1. Reveal_prfk( tpk2 ) @ #j1)))) ∧
       ((∃ #j1. Reveal_EphK( peki1 ) @ #j1) ∨
        ((∃ #j1. Reveal_rnd( r2 ) @ #j1) ∧
         (∃ #j1. Reveal_prfk( tpk2 ) @ #j1))))))"
/*
guarded formula characterizing all counter-examples:
"∃ pki1 pki2 pkr1 pkr2 peki1 peki2 psk1 psk2 ck kb1 kb2 ka1 ka2 k1 k2 r1
   r2 r3 tpk1 tpk2 #i #j #i1.
  (IKeys( <pki1, pkr1, peki1, psk1, ck, kb1, ka1, k1> ) @ #i) ∧
  (RKeys( <pki2, pkr2, peki2, psk2, ck, kb2, ka2, k2> ) @ #j) ∧
  (PRFGen( tpk1, r3, kb1 ) @ #i1) ∧
  (PRFGen( tpk2, r1, ka2 ) @ #j) ∧
  (PRFGen( tpk2, r2, k2 ) @ #j)
 ∧
  (#i1 < #i) ∧
  (((¬(psk1 = psk2)) ∨
    (¬(kb1 = kb2)) ∨
    (¬(ka1 = ka2)) ∨
    (¬(k1 = k2)) ∨
    (¬(peki1 = peki2)) ∨
    (¬(pki1 = pki2)) ∨
    ((¬(pkr1 = pkr2)) ∧
     ((((∀ #j1. (Reveal_AK( pkr1 ) @ #j1) ⇒ ⊥) ∧
        (((∀ #j1. (Reveal_rnd( r3 ) @ #j1) ⇒ ⊥) ∨
          (∀ #j1. (Reveal_prfk( tpk1 ) @ #j1) ⇒ ⊥)))) ∨
       ((∀ #j1. (Reveal_AK( pki1 ) @ #j1) ⇒ ⊥) ∧
        (((∀ #j1. (Reveal_rnd( r1 ) @ #j1) ⇒ ⊥) ∨
          (∀ #j1. (Reveal_prfk( tpk2 ) @ #j1) ⇒ ⊥)))) ∨
       ((∀ #j1. (Reveal_EphK( peki1 ) @ #j1) ⇒ ⊥) ∧
        (((∀ #j1. (Reveal_rnd( r2 ) @ #j1) ⇒ ⊥) ∨
          (∀ #j1. (Reveal_prfk( tpk2 ) @ #j1) ⇒ ⊥)))))))))"
*/
by sorry

lemma session_uniq [reuse]:
  all-traces
  "(∀ pki pkr peki psk ck kb ka k #i.
     (IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ⇒
     (¬(∃ peki2 #j1.
         (IKeys( <pki, pkr, peki2, psk, ck, kb, ka, k> ) @ #j1) ∧
         (¬(#j1 = #i))))) ∧
   (∀ pki pkr peki psk ck kb ka k #i.
     (RConfirm( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ⇒
     (¬(∃ peki2 psk2 #j1.
         (RConfirm( <pki, pkr, peki2, psk2, ck, kb, ka, k> ) @ #j1) ∧
         (¬(#j1 = #i)))))"
/*
guarded formula characterizing all counter-examples:
"((∃ pki pkr peki psk ck kb ka k #i.
    (IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i)
   ∧
    ∃ peki2 #j1.
     (IKeys( <pki, pkr, peki2, psk, ck, kb, ka, k> ) @ #j1) ∧ ¬(#j1 = #i)) ∨
  (∃ pki pkr peki psk ck kb ka k #i.
    (RConfirm( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i)
   ∧
    ∃ peki2 psk2 #j1.
     (RConfirm( <pki, pkr, peki2, psk2, ck, kb, ka, k> ) @ #j1)
    ∧
     ¬(#j1 = #i)))"
*/
by sorry

lemma KCI_on_initiator_resistance [reuse]:
  all-traces
  "∀ pki pkr peki psk ck kb ka k tpk r #i #i1.
    ((((IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
       (PRFGen( tpk, r, kb ) @ #i1)) ∧
      (#i1 < #i)) ∧
     (¬(∃ #j.
         (#j < #i) ∧ (RKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #j)))) ⇒
    ((∃ #j. (Reveal_PSK( psk ) @ #j) ∧ (#j < #i)) ∧
     ((∃ #j. (Reveal_AK( pkr ) @ #j) ∧ (#j < #i)) ∨
      ((∃ #j. Reveal_rnd( r ) @ #j) ∧ (∃ #j. Reveal_prfk( tpk ) @ #j))))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr peki psk ck kb ka k tpk r #i #i1.
  (IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
  (PRFGen( tpk, r, kb ) @ #i1)
 ∧
  (#i1 < #i) ∧
  (∀ #j.
    (RKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (((∀ #j. (Reveal_PSK( psk ) @ #j) ⇒ ¬(#j < #i)) ∨
    ((∀ #j. (Reveal_AK( pkr ) @ #j) ⇒ ¬(#j < #i)) ∧
     (((∀ #j. (Reveal_rnd( r ) @ #j) ⇒ ⊥) ∨
       (∀ #j. (Reveal_prfk( tpk ) @ #j) ⇒ ⊥))))))"
*/
by sorry

lemma KCI_on_responder_resistance [reuse]:
  all-traces
  "∀ pki pkr peki psk ck kb ka k tpk r #i.
    (((RConfirm( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
      (PRFGen( tpk, r, ka ) @ #i)) ∧
     (¬(∃ #j.
         (#j < #i) ∧ (IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #j)))) ⇒
    ((∃ #j. (Reveal_PSK( psk ) @ #j) ∧ (#j < #i)) ∧
     ((∃ #j. (Reveal_AK( pki ) @ #j) ∧ (#j < #i)) ∨
      ((∃ #j. Reveal_rnd( r ) @ #j) ∧ (∃ #j. Reveal_prfk( tpk ) @ #j))))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr peki psk ck kb ka k tpk r #i.
  (RConfirm( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
  (PRFGen( tpk, r, ka ) @ #i)
 ∧
  (∀ #j.
    (IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (((∀ #j. (Reveal_PSK( psk ) @ #j) ⇒ ¬(#j < #i)) ∨
    ((∀ #j. (Reveal_AK( pki ) @ #j) ⇒ ¬(#j < #i)) ∧
     (((∀ #j. (Reveal_rnd( r ) @ #j) ⇒ ⊥) ∨
       (∀ #j. (Reveal_prfk( tpk ) @ #j) ⇒ ⊥))))))"
*/
by sorry

lemma UKS_on_initiator_resistance [reuse]:
  all-traces
  "∀ pki pkr1 pkr2 peki1 peki2 psk1 psk2 ck kb ka k tpk1 tpk2 r1 r2 r3 #i
     #j #i1.
    (((((((IKeys( <pki, pkr1, peki1, psk1, ck, kb, ka, k> ) @ #i) ∧
          (PRFGen( tpk1, r3, kb ) @ #i1)) ∧
         (#i1 < #i)) ∧
        (RKeys( <pki, pkr2, peki2, psk2, ck, kb, ka, k> ) @ #j)) ∧
       (PRFGen( tpk2, r1, ka ) @ #j)) ∧
      (PRFGen( tpk2, r2, k ) @ #j)) ∧
     (¬((((((∃ #j1. Reveal_AK( pkr1 ) @ #j1) ∨
            ((∃ #j1. Reveal_rnd( r3 ) @ #j1) ∧ (∃ #j1. Reveal_prfk( tpk1 ) @ #j1))) ∧
           ((∃ #j1. Reveal_AK( pki ) @ #j1) ∨
            ((∃ #j1. Reveal_rnd( r1 ) @ #j1) ∧
             (∃ #j1. Reveal_prfk( tpk2 ) @ #j1)))) ∧
          ((∃ #j1. Reveal_EphK( peki1 ) @ #j1) ∨
           ((∃ #j1. Reveal_rnd( r2 ) @ #j1) ∧
            (∃ #j1. Reveal_prfk( tpk2 ) @ #j1)))) ∧
         (∃ #j2. Reveal_PSK( psk1 ) @ #j2)) ∧
        (∃ #j2. Reveal_PSK( psk2 ) @ #j2)))) ⇒
    (((pkr1 = pkr2) ∧ (peki1 = peki2)) ∧ (psk1 = psk2))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr1 pkr2 peki1 peki2 psk1 psk2 ck kb ka k tpk1 tpk2 r1 r2 r3 #i
   #j #i1.
  (IKeys( <pki, pkr1, peki1, psk1, ck, kb, ka, k> ) @ #i) ∧
  (PRFGen( tpk1, r3, kb ) @ #i1) ∧
  (RKeys( <pki, pkr2, peki2, psk2, ck, kb, ka, k> ) @ #j) ∧
  (PRFGen( tpk2, r1, ka ) @ #j) ∧
  (PRFGen( tpk2, r2, k ) @ #j)
 ∧
  (#i1 < #i) ∧
  ((((∀ #j1. (Reveal_AK( pkr1 ) @ #j1) ⇒ ⊥) ∧
     (((∀ #j1. (Reveal_rnd( r3 ) @ #j1) ⇒ ⊥) ∨
       (∀ #j1. (Reveal_prfk( tpk1 ) @ #j1) ⇒ ⊥)))) ∨
    ((∀ #j1. (Reveal_AK( pki ) @ #j1) ⇒ ⊥) ∧
     (((∀ #j1. (Reveal_rnd( r1 ) @ #j1) ⇒ ⊥) ∨
       (∀ #j1. (Reveal_prfk( tpk2 ) @ #j1) ⇒ ⊥)))) ∨
    ((∀ #j1. (Reveal_EphK( peki1 ) @ #j1) ⇒ ⊥) ∧
     (((∀ #j1. (Reveal_rnd( r2 ) @ #j1) ⇒ ⊥) ∨
       (∀ #j1. (Reveal_prfk( tpk2 ) @ #j1) ⇒ ⊥)))) ∨
    (∀ #j2. (Reveal_PSK( psk1 ) @ #j2) ⇒ ⊥) ∨
    (∀ #j2. (Reveal_PSK( psk2 ) @ #j2) ⇒ ⊥))) ∧
  (((¬(pkr1 = pkr2)) ∨ (¬(peki1 = peki2)) ∨ (¬(psk1 = psk2))))"
*/
by sorry

lemma UKS_on_initiator_with_default_psk [reuse]:
  all-traces
  "¬(∃ pki pkr1 pkr2 peki1 peki2 psk1 psk2 ck kb ka k #i #j #i1.
      ((((IKeys( <pki, pkr1, peki1, psk1, ck, kb, ka, k> ) @ #i) ∧
         (RKeys( <pki, pkr2, peki2, psk2, ck, kb, ka, k> ) @ #j)) ∧
        (DefaultPSK( pki, psk1 ) @ #i1)) ∧
       (DefaultPSK( pkr1, psk1 ) @ #i1)) ∧
      (¬(pkr1 = pkr2)))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr1 pkr2 peki1 peki2 psk1 psk2 ck kb ka k #i #j #i1.
  (IKeys( <pki, pkr1, peki1, psk1, ck, kb, ka, k> ) @ #i) ∧
  (RKeys( <pki, pkr2, peki2, psk2, ck, kb, ka, k> ) @ #j) ∧
  (DefaultPSK( pki, psk1 ) @ #i1) ∧
  (DefaultPSK( pkr1, psk1 ) @ #i1)
 ∧
  ¬(pkr1 = pkr2)"
*/
by sorry

lemma UKS_on_responder_resistance [reuse]:
  all-traces
  "¬(∃ pki1 pki2 pkr peki1 peki2 psk1 psk2 ck kb ka k #i #j.
      ((IKeys( <pki1, pkr, peki1, psk1, ck, kb, ka, k> ) @ #i) ∧
       (RKeys( <pki2, pkr, peki2, psk2, ck, kb, ka, k> ) @ #j)) ∧
      (¬(pki1 = pki2)))"
/*
guarded formula characterizing all counter-examples:
"∃ pki1 pki2 pkr peki1 peki2 psk1 psk2 ck kb ka k #i #j.
  (IKeys( <pki1, pkr, peki1, psk1, ck, kb, ka, k> ) @ #i) ∧
  (RKeys( <pki2, pkr, peki2, psk2, ck, kb, ka, k> ) @ #j)
 ∧
  ¬(pki1 = pki2)"
*/
by sorry

lemma key_init_secrecy [reuse]:
  all-traces
  "∀ pki pkr peki psk ck kb ka k tpk r #i #j #i1.
    (((IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
      (PRFGen( tpk, r, kb ) @ #i1)) ∧
     (K( ck ) @ #j)) ⇒
    ((∃ #j1. Reveal_PSK( psk ) @ #j1) ∧
     ((∃ #j1. Reveal_AK( pkr ) @ #j1) ∨
      ((∃ #j1. Reveal_rnd( r ) @ #j1) ∧ (∃ #j1. Reveal_prfk( tpk ) @ #j1))))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr peki psk ck kb ka k tpk r #i #j #i1.
  (IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
  (PRFGen( tpk, r, kb ) @ #i1) ∧
  (K( ck ) @ #j)
 ∧
  ((∀ #j1. (Reveal_PSK( psk ) @ #j1) ⇒ ⊥) ∨
   ((∀ #j1. (Reveal_AK( pkr ) @ #j1) ⇒ ⊥) ∧
    (((∀ #j1. (Reveal_rnd( r ) @ #j1) ⇒ ⊥) ∨
      (∀ #j1. (Reveal_prfk( tpk ) @ #j1) ⇒ ⊥)))))"
*/
by sorry

lemma key_resp_secrecy [reuse]:
  all-traces
  "∀ pki pkr peki psk ck kb ka k tpk r #i #j #i1.
    ((((RConfirm( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
       (PRFGen( tpk, r, ka ) @ #i1)) ∧
      (#i1 < #i)) ∧
     (K( ck ) @ #j)) ⇒
    ((∃ #j1. Reveal_PSK( psk ) @ #j1) ∧
     ((∃ #j1. Reveal_AK( pki ) @ #j1) ∨
      ((∃ #j1. Reveal_rnd( r ) @ #j1) ∧ (∃ #j1. Reveal_prfk( tpk ) @ #j1))))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr peki psk ck kb ka k tpk r #i #j #i1.
  (RConfirm( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
  (PRFGen( tpk, r, ka ) @ #i1) ∧
  (K( ck ) @ #j)
 ∧
  (#i1 < #i) ∧
  (((∀ #j1. (Reveal_PSK( psk ) @ #j1) ⇒ ⊥) ∨
    ((∀ #j1. (Reveal_AK( pki ) @ #j1) ⇒ ⊥) ∧
     (((∀ #j1. (Reveal_rnd( r ) @ #j1) ⇒ ⊥) ∨
       (∀ #j1. (Reveal_prfk( tpk ) @ #j1) ⇒ ⊥))))))"
*/
by sorry

lemma key_secrecy:
  all-traces
  "∀ pki pkr peki psk ck kb ka k tpk1 tpk2 r1 r2 r3 #i #i2 #i3 #i4.
    ((((((IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
         (PRFGen( tpk1, r1, kb ) @ #i4)) ∧
        (RKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i2)) ∧
       (PRFGen( tpk2, r2, ka ) @ #i2)) ∧
      (PRFGen( tpk2, r3, k ) @ #i2)) ∧
     (K( ck ) @ #i3)) ⇒
    ((∃ #j. Reveal_PSK( psk ) @ #j) ∧
     ((((∃ #j1. Reveal_AK( pki ) @ #j1) ∨
        ((∃ #j1. Reveal_rnd( r2 ) @ #j1) ∧ (∃ #j1. Reveal_prfk( tpk2 ) @ #j1))) ∧
       ((∃ #j1. Reveal_AK( pkr ) @ #j1) ∨
        ((∃ #j1. Reveal_rnd( r1 ) @ #j1) ∧
         (∃ #j1. Reveal_prfk( tpk1 ) @ #j1)))) ∧
      ((∃ #j1. Reveal_EphK( peki ) @ #j1) ∨
       ((∃ #j1. Reveal_rnd( r3 ) @ #j1) ∧
        (∃ #j1. Reveal_prfk( tpk2 ) @ #j1)))))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr peki psk ck kb ka k tpk1 tpk2 r1 r2 r3 #i #i2 #i3 #i4.
  (IKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
  (PRFGen( tpk1, r1, kb ) @ #i4) ∧
  (RKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i2) ∧
  (PRFGen( tpk2, r2, ka ) @ #i2) ∧
  (PRFGen( tpk2, r3, k ) @ #i2) ∧
  (K( ck ) @ #i3)
 ∧
  ((∀ #j. (Reveal_PSK( psk ) @ #j) ⇒ ⊥) ∨
   ((∀ #j1. (Reveal_AK( pki ) @ #j1) ⇒ ⊥) ∧
    (((∀ #j1. (Reveal_rnd( r2 ) @ #j1) ⇒ ⊥) ∨
      (∀ #j1. (Reveal_prfk( tpk2 ) @ #j1) ⇒ ⊥)))) ∨
   ((∀ #j1. (Reveal_AK( pkr ) @ #j1) ⇒ ⊥) ∧
    (((∀ #j1. (Reveal_rnd( r1 ) @ #j1) ⇒ ⊥) ∨
      (∀ #j1. (Reveal_prfk( tpk1 ) @ #j1) ⇒ ⊥)))) ∨
   ((∀ #j1. (Reveal_EphK( peki ) @ #j1) ⇒ ⊥) ∧
    (((∀ #j1. (Reveal_rnd( r3 ) @ #j1) ⇒ ⊥) ∨
      (∀ #j1. (Reveal_prfk( tpk2 ) @ #j1) ⇒ ⊥)))))"
*/
by sorry

lemma encap_init_secrecy [sources]:
  all-traces
  "∀ pki pkr peki psk kb tpk r #i.
    ((((ISend( <pki, pkr, peki, psk, kb> ) @ #i) ∧
       (PRFGen( tpk, r, kb ) @ #i)) ∧
      (¬(∃ #j. Reveal_AK( pkr ) @ #j))) ∧
     (∃ #j. K( kb ) @ #j)) ⇒
    ((∃ #j. Reveal_rnd( r ) @ #j) ∧ (∃ #j. Reveal_prfk( tpk ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr peki psk kb tpk r #i.
  (ISend( <pki, pkr, peki, psk, kb> ) @ #i) ∧ (PRFGen( tpk, r, kb ) @ #i)
 ∧
  (∀ #j. (Reveal_AK( pkr ) @ #j) ⇒ ⊥) ∧
  (∃ #j. (K( kb ) @ #j)) ∧
  (((∀ #j. (Reveal_rnd( r ) @ #j) ⇒ ⊥) ∨
    (∀ #j. (Reveal_prfk( tpk ) @ #j) ⇒ ⊥)))"
*/
by sorry

lemma encap_resp_secrecy [sources]:
  all-traces
  "∀ pki pkr peki psk ck kb ka k tpk r #i.
    ((((RKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
       (PRFGen( tpk, r, ka ) @ #i)) ∧
      (¬(∃ #j. Reveal_AK( pki ) @ #j))) ∧
     (∃ #j. K( ka ) @ #j)) ⇒
    ((∃ #j. Reveal_rnd( r ) @ #j) ∧ (∃ #j. Reveal_prfk( tpk ) @ #j))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr peki psk ck kb ka k tpk r #i.
  (RKeys( <pki, pkr, peki, psk, ck, kb, ka, k> ) @ #i) ∧
  (PRFGen( tpk, r, ka ) @ #i)
 ∧
  (∀ #j. (Reveal_AK( pki ) @ #j) ⇒ ⊥) ∧
  (∃ #j. (K( ka ) @ #j)) ∧
  (((∀ #j. (Reveal_rnd( r ) @ #j) ⇒ ⊥) ∨
    (∀ #j. (Reveal_prfk( tpk ) @ #j) ⇒ ⊥)))"
*/
by sorry

lemma identity_hiding:
  all-traces
  "∀ pki pkr peki psk kb surrogate tpk r #i #j.
    ((((ISend( <pki, pkr, peki, psk, kb> ) @ #i) ∧
       (Identity_Surrogate( surrogate ) @ #i)) ∧
      (PRFGen( tpk, r, kb ) @ #i)) ∧
     (K( surrogate ) @ #j)) ⇒
    ((∃ #j.1. Reveal_AK( pkr ) @ #j.1) ∨
     ((∃ #j.1. Reveal_rnd( r ) @ #j.1) ∧
      (∃ #j.1. Reveal_prfk( tpk ) @ #j.1)))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr peki psk kb surrogate tpk r #i #j.
  (ISend( <pki, pkr, peki, psk, kb> ) @ #i) ∧
  (Identity_Surrogate( surrogate ) @ #i) ∧
  (PRFGen( tpk, r, kb ) @ #i) ∧
  (K( surrogate ) @ #j)
 ∧
  (∀ #j.1. (Reveal_AK( pkr ) @ #j.1) ⇒ ⊥) ∧
  (((∀ #j.1. (Reveal_rnd( r ) @ #j.1) ⇒ ⊥) ∨
    (∀ #j.1. (Reveal_prfk( tpk ) @ #j.1) ⇒ ⊥)))"
*/
by sorry

lemma replay_attack_resistance:
  all-traces
  "∀ pki pkr peki peki2 psk psk2 cr cr2 kb ka ka2 k k2 ts ts2 tpk r #i #i1
     #j.
    (((((((((RKeys( <pki, pkr, peki, psk, cr, kb, ka, k> ) @ #i) ∧
            (OnlyOnce( pki, pkr, ts ) @ #i)) ∧
           (ISend( <pki, pkr, peki, psk, kb> ) @ #i1)) ∧
          (#i1 < #i)) ∧
         (PRFGen( tpk, r, kb ) @ #i1)) ∧
        (RKeys( <pki, pkr, peki2, psk2, cr2, kb, ka2, k2> ) @ #j)) ∧
       (#i < #j)) ∧
      (OnlyOnce( pki, pkr, ts2 ) @ #j)) ∧
     (¬(ts = ts2))) ⇒
    ((¬(∃ #j1.
         ((ISend( <pki, pkr, peki2, psk2, kb> ) @ #j1) ∧ (#j1 < #j)) ∧
         (#i < #j1))) ∧
     ((∃ #j1. (Reveal_AK( pkr ) @ #j1) ∧ (#j1 < #j)) ∨
      ((∃ #j1. Reveal_rnd( r ) @ #j1) ∧ (∃ #j1. Reveal_prfk( tpk ) @ #j1))))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr peki peki2 psk psk2 cr cr2 kb ka ka2 k k2 ts ts2 tpk r #i #i1
   #j.
  (RKeys( <pki, pkr, peki, psk, cr, kb, ka, k> ) @ #i) ∧
  (OnlyOnce( pki, pkr, ts ) @ #i) ∧
  (ISend( <pki, pkr, peki, psk, kb> ) @ #i1) ∧
  (PRFGen( tpk, r, kb ) @ #i1) ∧
  (RKeys( <pki, pkr, peki2, psk2, cr2, kb, ka2, k2> ) @ #j) ∧
  (OnlyOnce( pki, pkr, ts2 ) @ #j)
 ∧
  (#i1 < #i) ∧
  (#i < #j) ∧
  (¬(ts = ts2)) ∧
  (((∃ #j1.
      (ISend( <pki, pkr, peki2, psk2, kb> ) @ #j1) ∧ (#j1 < #j) ∧ (#i < #j1)) ∨
    ((∀ #j1. (Reveal_AK( pkr ) @ #j1) ⇒ ¬(#j1 < #j)) ∧
     (((∀ #j1. (Reveal_rnd( r ) @ #j1) ⇒ ⊥) ∨
       (∀ #j1. (Reveal_prfk( tpk ) @ #j1) ⇒ ⊥))))))"
*/
simplify
solve( !F_StateInvariants( ~id, ~psk, ~ltkR, pk(~ltkI), ~tpk ) ▶₁ #i )
  case AddPublicKey
  solve( !F_StateInvariants( ~id.1, ~psk, ~ltkI, pk(~ltkR), ~tpk.1
         ) ▶₁ #i1 )
    case AddPublicKey
    solve( !F_StateInvariants( ~id.2, ~psk.1, ~ltkR, pk(~ltkI), ~tpk.2
           ) ▶₁ #j )
      case AddPublicKey
      solve( PRFGen( tpk.3, r, prf(~tpk.1, ~r3) ) @ #i1 )
        case Handshake_Init
        solve( (∃ #j1.
                 (ISend( <pk(~ltkI), pk(~ltkR), peki2, ~psk.1, prf(~tpk.1, ~r3)> ) @ #j1)
                ∧
                 (#j1 < #j) ∧ (#i < #j1))  ∥
               ((∀ #j1. (Reveal_AK( pk(~ltkR) ) @ #j1) ⇒ ¬(#j1 < #j)) ∧
                (((∀ #j1. (Reveal_rnd( ~r3 ) @ #j1) ⇒ ⊥) ∨
                  (∀ #j1. (Reveal_prfk( ~tpk.1 ) @ #j1) ⇒ ⊥)))) )
          case case_1
          by contradiction /* cyclic */
        next
          case case_2
          solve( (∀ #j1. (Reveal_rnd( ~r3 ) @ #j1) ⇒ ⊥)  ∥
                 (∀ #j1. (Reveal_prfk( ~tpk.1 ) @ #j1) ⇒ ⊥) )
            case case_1
            solve( !KU( aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'
                               >),
                             <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                   ) @ #vk.12 )
              case Handshake_Init
              solve( !KU( aead(h(<
                                  h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'>),
                               <ts, 'TAI64N'>,
                               h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                  aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                       <h(pk(~ltkI)), ~pkISurrogate>,
                                       h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                 >))
                     ) @ #vk.14 )
                case Handshake_Init
                solve( !KU( aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                 <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                       ) @ #vk.22 )
                  case Handshake_Init
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'
                                     >),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                      aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), ~pkISurrogate>,
                                           h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                     >))
                         ) @ #vk.22 )
                    case Handshake_Init
                    by contradiction /* cyclic */
                  next
                    case c_aead
                    solve( !KU( h(<
                                   h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'>)
                           ) @ #vk.26 )
                      case c_h
                      solve( !KU( ~psk.1 ) @ #vk.34 )
                        case PSK_reveal
                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                       aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                            <h(pk(~ltkI)), ~pkISurrogate>,
                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                      >)
                               ) @ #vk.29 )
                          case c_h
                          solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.38 )
                              case c_h
                              solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.41 )
                                case c_h
                                solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.43 )
                                  case Handshake_Init
                                  solve( !KU( ~ltkR ) @ #vk.47 )
                                    case AgentKey_reveal
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_prf
                                  solve( !KU( ~tpk.1 ) @ #vk.47 )
                                    case PRFK_reveal
                                    solve( !KU( ~r3 ) @ #vk.48 )
                                      case Rnd_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_aead
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'>),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                      aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                     >))
                         ) @ #vk.24 )
                    case c_aead
                    solve( !KU( h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>)
                           ) @ #vk.28 )
                      case c_h
                      solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>) ) @ #vk.30 )
                        case c_h
                        solve( !KU( h(pk(~ltkI)) ) @ #vk.32 )
                          case Handshake_Init
                          solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                         ~psk.1, '2'>)
                                 ) @ #vk.34 )
                            case c_h
                            solve( !KU( ~psk.1 ) @ #vk.49 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                             aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                            >)
                                     ) @ #vk.37 )
                                case c_h
                                solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.45 )
                                  case Handshake_Init
                                  solve( !KU( ~ltkR ) @ #vk.51 )
                                    case AgentKey_reveal
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_prf
                                  solve( !KU( ~tpk.1 ) @ #vk.51 )
                                    case PRFK_reveal
                                    solve( !KU( ~r3 ) @ #vk.52 )
                                      case Rnd_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_h
                          solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                         ~psk.1, '2'>)
                                 ) @ #vk.34 )
                            case c_h
                            solve( !KU( ~psk.1 ) @ #vk.49 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                             aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                            >)
                                     ) @ #vk.37 )
                                case c_h
                                solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.45 )
                                  case Handshake_Init
                                  solve( !KU( ~ltkR ) @ #vk.51 )
                                    case AgentKey_reveal
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_prf
                                  solve( !KU( ~tpk.1 ) @ #vk.51 )
                                    case PRFK_reveal
                                    solve( !KU( ~r3 ) @ #vk.52 )
                                      case Rnd_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case c_aead
                solve( !KU( aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                 <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                       ) @ #vk.22 )
                  case Handshake_Init
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'
                                     >),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                      aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), ~pkISurrogate>,
                                           h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                     >))
                         ) @ #vk.22 )
                    case Handshake_Init
                    solve( !KU( h(<
                                   h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'>)
                           ) @ #vk.26 )
                      case c_h
                      solve( !KU( ~psk ) @ #vk.34 )
                        case PSK_reveal
                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                       aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                            <h(pk(~ltkI)), ~pkISurrogate>,
                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                      >)
                               ) @ #vk.29 )
                          case c_h
                          solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.38 )
                              case c_h
                              solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.41 )
                                case c_h
                                solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.43 )
                                  case Handshake_Init
                                  solve( !KU( ~ltkR ) @ #vk.47 )
                                    case AgentKey_reveal
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_prf
                                  solve( !KU( ~tpk.1 ) @ #vk.47 )
                                    case PRFK_reveal
                                    solve( !KU( ~r3 ) @ #vk.48 )
                                      case Rnd_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_aead
                    solve( !KU( h(<
                                   h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'>)
                           ) @ #vk.26 )
                      case c_h
                      solve( !KU( ~psk ) @ #vk.37 )
                        case PSK_reveal
                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                       aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                            <h(pk(~ltkI)), ~pkISurrogate>,
                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                      >)
                               ) @ #vk.29 )
                          case c_h
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, 
                                         '2'>)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( ~psk.1 ) @ #vk.43 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>)
                                     ) @ #vk.39 )
                                case c_h
                                solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.47 )
                                    case c_h
                                    solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.49 )
                                      case Handshake_Init
                                      solve( !KU( ~ltkR ) @ #vk.53 )
                                        case AgentKey_reveal
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case c_prf
                                      solve( !KU( ~tpk.1 ) @ #vk.53 )
                                        case PRFK_reveal
                                        solve( !KU( ~r3 ) @ #vk.54 )
                                          case Rnd_reveal
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_aead
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'>),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                      aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                     >))
                         ) @ #vk.24 )
                    case c_aead
                    solve( !KU( h(<
                                   h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'>)
                           ) @ #vk.28 )
                      case c_h
                      solve( !KU( ~psk ) @ #vk.45 )
                        case PSK_reveal
                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                       aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                            <h(pk(~ltkI)), ~pkISurrogate>,
                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                      >)
                               ) @ #vk.31 )
                          case c_h
                          solve( !KU( h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>)
                                 ) @ #vk.37 )
                            case c_h
                            solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>) ) @ #vk.40 )
                              case c_h
                              solve( !KU( h(pk(~ltkI)) ) @ #vk.42 )
                                case Handshake_Init
                                solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                               ~psk.1, '2'>)
                                       ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( ~psk.1 ) @ #vk.59 )
                                    case PSK_reveal
                                    solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                                   aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'
                                                          >),
                                                        <h(pk(~ltkI)), x>,
                                                        h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                                  >)
                                           ) @ #vk.46 )
                                      case c_h
                                      solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>)
                                             ) @ #vk.50 )
                                        case c_h
                                        solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>)
                                               ) @ #vk.56 )
                                          case c_h
                                          solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.60 )
                                            case Handshake_Init
                                            solve( !KU( ~ltkR ) @ #vk.65 )
                                              case AgentKey_reveal
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case c_prf
                                            solve( !KU( ~tpk.1 ) @ #vk.65 )
                                              case PRFK_reveal
                                              solve( !KU( ~r3 ) @ #vk.66 )
                                                case Rnd_reveal
                                                by contradiction /* from formulas */
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              next
                                case c_h
                                solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                               ~psk.1, '2'>)
                                       ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( ~psk.1 ) @ #vk.59 )
                                    case PSK_reveal
                                    solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                                   aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'
                                                          >),
                                                        <h(pk(~ltkI)), x>,
                                                        h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                                  >)
                                           ) @ #vk.46 )
                                      case c_h
                                      solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>)
                                             ) @ #vk.50 )
                                        case c_h
                                        solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>)
                                               ) @ #vk.56 )
                                          case c_h
                                          solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.60 )
                                            case Handshake_Init
                                            solve( !KU( ~ltkR ) @ #vk.65 )
                                              case AgentKey_reveal
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case c_prf
                                            solve( !KU( ~tpk.1 ) @ #vk.65 )
                                              case PRFK_reveal
                                              solve( !KU( ~r3 ) @ #vk.66 )
                                                case Rnd_reveal
                                                by contradiction /* from formulas */
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case c_aead
              solve( !KU( aead(h(<
                                  h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'>),
                               <ts, 'TAI64N'>,
                               h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                  aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                       <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                 >))
                     ) @ #vk.14 )
                case Handshake_Init
                solve( !KU( ~pkISurrogate ) @ #vk.32 )
                  case Handshake_Init
                  solve( !KU( aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                   <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                         ) @ #vk.23 )
                    case c_aead
                    solve( !KU( aead(h(<
                                        h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'
                                       >),
                                     <ts2, 'TAI64N'>,
                                     h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                        aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                             <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                       >))
                           ) @ #vk.26 )
                      case Handshake_Init
                      by contradiction /* cyclic */
                    next
                      case c_aead
                      solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>)
                             ) @ #vk.30 )
                        case c_h
                        solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.31 )
                          case c_h
                          solve( !KU( h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>) ) @ #vk.36 )
                              case c_h
                              solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                             ~psk.1, '2'>)
                                     ) @ #vk.39 )
                                case c_h
                                solve( !KU( ~psk.1 ) @ #vk.55 )
                                  case PSK_reveal
                                  solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                                 aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                                      <h(pk(~ltkI)), x>,
                                                      h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                                >)
                                         ) @ #vk.42 )
                                    case c_h
                                    solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.48 )
                                      case c_h
                                      solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.53 )
                                        case Handshake_Init
                                        solve( !KU( ~ltkR ) @ #vk.60 )
                                          case AgentKey_reveal
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case c_prf
                                        solve( !KU( ~tpk.1 ) @ #vk.60 )
                                          case PRFK_reveal
                                          solve( !KU( ~r3 ) @ #vk.61 )
                                            case Rnd_reveal
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case c_aead
                solve( !KU( aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                 <h(pk(~ltkI)), x.1>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                       ) @ #vk.22 )
                  case Handshake_Init
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'
                                     >),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                      aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), ~pkISurrogate>,
                                           h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                     >))
                         ) @ #vk.23 )
                    case Handshake_Init
                    solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>)
                           ) @ #vk.27 )
                      case c_h
                      solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.29 )
                        case c_h
                        solve( !KU( h(pk(~ltkI)) ) @ #vk.31 )
                          case Handshake_Init
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.33 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.48 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.36 )
                                case c_h
                                solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.42 )
                                  case c_h
                                  solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.46 )
                                    case Handshake_Init
                                    solve( !KU( ~ltkR ) @ #vk.53 )
                                      case AgentKey_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_prf
                                    solve( !KU( ~tpk.1 ) @ #vk.53 )
                                      case PRFK_reveal
                                      solve( !KU( ~r3 ) @ #vk.54 )
                                        case Rnd_reveal
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_h
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.33 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.48 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.36 )
                                case c_h
                                solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.42 )
                                  case c_h
                                  solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.46 )
                                    case Handshake_Init
                                    solve( !KU( ~ltkR ) @ #vk.53 )
                                      case AgentKey_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_prf
                                    solve( !KU( ~tpk.1 ) @ #vk.53 )
                                      case PRFK_reveal
                                      solve( !KU( ~r3 ) @ #vk.54 )
                                        case Rnd_reveal
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_aead
                    solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>)
                           ) @ #vk.27 )
                      case c_h
                      solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.29 )
                        case c_h
                        solve( !KU( h(pk(~ltkI)) ) @ #vk.31 )
                          case Handshake_Init
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.33 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.52 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.36 )
                                case c_h
                                solve( !KU( h(<
                                               h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), 
                                               ~psk.1, '2'>)
                                       ) @ #vk.42 )
                                  case c_h
                                  solve( !KU( ~psk.1 ) @ #vk.56 )
                                    case PSK_reveal
                                    solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                                   aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), 
                                                           '2'>),
                                                        <h(pk(~ltkI)), ~pkISurrogate>,
                                                        h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                                  >)
                                           ) @ #vk.45 )
                                      case c_h
                                      solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.50 )
                                        case c_h
                                        solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.54 )
                                          case Handshake_Init
                                          solve( !KU( ~ltkR ) @ #vk.61 )
                                            case AgentKey_reveal
                                            by contradiction /* from formulas */
                                          qed
                                        next
                                          case c_prf
                                          solve( !KU( ~tpk.1 ) @ #vk.61 )
                                            case PRFK_reveal
                                            solve( !KU( ~r3 ) @ #vk.62 )
                                              case Rnd_reveal
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_h
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.33 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.52 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.36 )
                                case c_h
                                solve( !KU( h(<
                                               h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), 
                                               ~psk.1, '2'>)
                                       ) @ #vk.42 )
                                  case c_h
                                  solve( !KU( ~psk.1 ) @ #vk.56 )
                                    case PSK_reveal
                                    solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                                   aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), 
                                                           '2'>),
                                                        <h(pk(~ltkI)), ~pkISurrogate>,
                                                        h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                                  >)
                                           ) @ #vk.45 )
                                      case c_h
                                      solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.50 )
                                        case c_h
                                        solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.54 )
                                          case Handshake_Init
                                          solve( !KU( ~ltkR ) @ #vk.61 )
                                            case AgentKey_reveal
                                            by contradiction /* from formulas */
                                          qed
                                        next
                                          case c_prf
                                          solve( !KU( ~tpk.1 ) @ #vk.61 )
                                            case PRFK_reveal
                                            solve( !KU( ~r3 ) @ #vk.62 )
                                              case Rnd_reveal
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_aead
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'>),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                      aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), x.1>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                     >))
                         ) @ #vk.24 )
                    case Handshake_Init
                    solve( !KU( ~pkISurrogate ) @ #vk.38 )
                      case Handshake_Init
                      solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>)
                             ) @ #vk.28 )
                        case c_h
                        solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.31 )
                          case c_h
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.49 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.38 )
                                case c_h
                                solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.48 )
                                    case Handshake_Init
                                    solve( !KU( ~ltkR ) @ #vk.54 )
                                      case AgentKey_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_prf
                                    solve( !KU( ~tpk.1 ) @ #vk.54 )
                                      case PRFK_reveal
                                      solve( !KU( ~r3 ) @ #vk.55 )
                                        case Rnd_reveal
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_aead
                    solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>)
                           ) @ #vk.28 )
                      case c_h
                      solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.30 )
                        case c_h
                        solve( !KU( h(pk(~ltkI)) ) @ #vk.32 )
                          case Handshake_Init
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.57 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.38 )
                                case c_h
                                solve( !KU( h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>)
                                       ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>) ) @ #vk.46 )
                                    case c_h
                                    solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                                   ~psk.1, '2'>)
                                           ) @ #vk.49 )
                                      case c_h
                                      solve( !KU( ~psk.1 ) @ #vk.65 )
                                        case PSK_reveal
                                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                                       aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), 
                                                               '2'>),
                                                            <h(pk(~ltkI)), x.1>,
                                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                                      >)
                                               ) @ #vk.51 )
                                          case c_h
                                          solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.56 )
                                            case c_h
                                            solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.61 )
                                              case Handshake_Init
                                              solve( !KU( ~ltkR ) @ #vk.70 )
                                                case AgentKey_reveal
                                                by contradiction /* from formulas */
                                              qed
                                            next
                                              case c_prf
                                              solve( !KU( ~tpk.1 ) @ #vk.70 )
                                                case PRFK_reveal
                                                solve( !KU( ~r3 ) @ #vk.71 )
                                                  case Rnd_reveal
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_h
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.57 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.38 )
                                case c_h
                                solve( !KU( h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>)
                                       ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>) ) @ #vk.46 )
                                    case c_h
                                    solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                                   ~psk.1, '2'>)
                                           ) @ #vk.49 )
                                      case c_h
                                      solve( !KU( ~psk.1 ) @ #vk.65 )
                                        case PSK_reveal
                                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                                       aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), 
                                                               '2'>),
                                                            <h(pk(~ltkI)), x.1>,
                                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                                      >)
                                               ) @ #vk.51 )
                                          case c_h
                                          solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.56 )
                                            case c_h
                                            solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.61 )
                                              case Handshake_Init
                                              solve( !KU( ~ltkR ) @ #vk.70 )
                                                case AgentKey_reveal
                                                by contradiction /* from formulas */
                                              qed
                                            next
                                              case c_prf
                                              solve( !KU( ~tpk.1 ) @ #vk.70 )
                                                case PRFK_reveal
                                                solve( !KU( ~r3 ) @ #vk.71 )
                                                  case Rnd_reveal
                                                  by contradiction /* from formulas */
                                                qed
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          next
            case case_2
            solve( !KU( aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'
                               >),
                             <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                   ) @ #vk.12 )
              case Handshake_Init
              solve( !KU( aead(h(<
                                  h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'>),
                               <ts, 'TAI64N'>,
                               h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                  aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                       <h(pk(~ltkI)), ~pkISurrogate>,
                                       h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                 >))
                     ) @ #vk.14 )
                case Handshake_Init
                solve( !KU( aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                 <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                       ) @ #vk.22 )
                  case Handshake_Init
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'
                                     >),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                      aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), ~pkISurrogate>,
                                           h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                     >))
                         ) @ #vk.22 )
                    case Handshake_Init
                    by contradiction /* cyclic */
                  next
                    case c_aead
                    solve( !KU( h(<
                                   h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'>)
                           ) @ #vk.26 )
                      case c_h
                      solve( !KU( ~psk.1 ) @ #vk.34 )
                        case PSK_reveal
                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                       aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                            <h(pk(~ltkI)), ~pkISurrogate>,
                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                      >)
                               ) @ #vk.29 )
                          case c_h
                          solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.38 )
                              case c_h
                              solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.41 )
                                case c_h
                                solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.43 )
                                  case Handshake_Init
                                  solve( !KU( ~ltkR ) @ #vk.47 )
                                    case AgentKey_reveal
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_prf
                                  solve( !KU( ~tpk.1 ) @ #vk.47 )
                                    case PRFK_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_aead
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'>),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                      aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                     >))
                         ) @ #vk.24 )
                    case c_aead
                    solve( !KU( h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>)
                           ) @ #vk.28 )
                      case c_h
                      solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>) ) @ #vk.30 )
                        case c_h
                        solve( !KU( h(pk(~ltkI)) ) @ #vk.32 )
                          case Handshake_Init
                          solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                         ~psk.1, '2'>)
                                 ) @ #vk.34 )
                            case c_h
                            solve( !KU( ~psk.1 ) @ #vk.49 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                             aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                            >)
                                     ) @ #vk.37 )
                                case c_h
                                solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.45 )
                                  case Handshake_Init
                                  solve( !KU( ~ltkR ) @ #vk.51 )
                                    case AgentKey_reveal
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_prf
                                  solve( !KU( ~tpk.1 ) @ #vk.51 )
                                    case PRFK_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_h
                          solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                         ~psk.1, '2'>)
                                 ) @ #vk.34 )
                            case c_h
                            solve( !KU( ~psk.1 ) @ #vk.49 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                             aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                            >)
                                     ) @ #vk.37 )
                                case c_h
                                solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.45 )
                                  case Handshake_Init
                                  solve( !KU( ~ltkR ) @ #vk.51 )
                                    case AgentKey_reveal
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_prf
                                  solve( !KU( ~tpk.1 ) @ #vk.51 )
                                    case PRFK_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case c_aead
                solve( !KU( aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                 <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                       ) @ #vk.22 )
                  case Handshake_Init
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'
                                     >),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                      aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), ~pkISurrogate>,
                                           h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                     >))
                         ) @ #vk.22 )
                    case Handshake_Init
                    solve( !KU( h(<
                                   h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'>)
                           ) @ #vk.26 )
                      case c_h
                      solve( !KU( ~psk ) @ #vk.34 )
                        case PSK_reveal
                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                       aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                            <h(pk(~ltkI)), ~pkISurrogate>,
                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                      >)
                               ) @ #vk.29 )
                          case c_h
                          solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.38 )
                              case c_h
                              solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.41 )
                                case c_h
                                solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.43 )
                                  case Handshake_Init
                                  solve( !KU( ~ltkR ) @ #vk.47 )
                                    case AgentKey_reveal
                                    by contradiction /* from formulas */
                                  qed
                                next
                                  case c_prf
                                  solve( !KU( ~tpk.1 ) @ #vk.47 )
                                    case PRFK_reveal
                                    by contradiction /* from formulas */
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_aead
                    solve( !KU( h(<
                                   h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'>)
                           ) @ #vk.26 )
                      case c_h
                      solve( !KU( ~psk ) @ #vk.37 )
                        case PSK_reveal
                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                       aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                            <h(pk(~ltkI)), ~pkISurrogate>,
                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                      >)
                               ) @ #vk.29 )
                          case c_h
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, 
                                         '2'>)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( ~psk.1 ) @ #vk.43 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>)
                                     ) @ #vk.39 )
                                case c_h
                                solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.47 )
                                    case c_h
                                    solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.49 )
                                      case Handshake_Init
                                      solve( !KU( ~ltkR ) @ #vk.53 )
                                        case AgentKey_reveal
                                        by contradiction /* from formulas */
                                      qed
                                    next
                                      case c_prf
                                      solve( !KU( ~tpk.1 ) @ #vk.53 )
                                        case PRFK_reveal
                                        by contradiction /* from formulas */
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_aead
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'>),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                      aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                     >))
                         ) @ #vk.24 )
                    case c_aead
                    solve( !KU( h(<
                                   h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'>)
                           ) @ #vk.28 )
                      case c_h
                      solve( !KU( ~psk ) @ #vk.45 )
                        case PSK_reveal
                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                       aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                            <h(pk(~ltkI)), ~pkISurrogate>,
                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                      >)
                               ) @ #vk.31 )
                          case c_h
                          solve( !KU( h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>)
                                 ) @ #vk.37 )
                            case c_h
                            solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>) ) @ #vk.40 )
                              case c_h
                              solve( !KU( h(pk(~ltkI)) ) @ #vk.42 )
                                case Handshake_Init
                                solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                               ~psk.1, '2'>)
                                       ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( ~psk.1 ) @ #vk.59 )
                                    case PSK_reveal
                                    solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                                   aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'
                                                          >),
                                                        <h(pk(~ltkI)), x>,
                                                        h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                                  >)
                                           ) @ #vk.46 )
                                      case c_h
                                      solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>)
                                             ) @ #vk.50 )
                                        case c_h
                                        solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>)
                                               ) @ #vk.56 )
                                          case c_h
                                          solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.60 )
                                            case Handshake_Init
                                            solve( !KU( ~ltkR ) @ #vk.65 )
                                              case AgentKey_reveal
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case c_prf
                                            solve( !KU( ~tpk.1 ) @ #vk.65 )
                                              case PRFK_reveal
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              next
                                case c_h
                                solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                               ~psk.1, '2'>)
                                       ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( ~psk.1 ) @ #vk.59 )
                                    case PSK_reveal
                                    solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                                   aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'
                                                          >),
                                                        <h(pk(~ltkI)), x>,
                                                        h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                                  >)
                                           ) @ #vk.46 )
                                      case c_h
                                      solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>)
                                             ) @ #vk.50 )
                                        case c_h
                                        solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>)
                                               ) @ #vk.56 )
                                          case c_h
                                          solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.60 )
                                            case Handshake_Init
                                            solve( !KU( ~ltkR ) @ #vk.65 )
                                              case AgentKey_reveal
                                              by contradiction /* from formulas */
                                            qed
                                          next
                                            case c_prf
                                            solve( !KU( ~tpk.1 ) @ #vk.65 )
                                              case PRFK_reveal
                                              by contradiction /* from formulas */
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            next
              case c_aead
              solve( !KU( aead(h(<
                                  h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'>),
                               <ts, 'TAI64N'>,
                               h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                  aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                       <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                 >))
                     ) @ #vk.14 )
                case Handshake_Init
                solve( !KU( ~pkISurrogate ) @ #vk.32 )
                  case Handshake_Init
                  solve( !KU( aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                   <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                         ) @ #vk.23 )
                    case c_aead
                    solve( !KU( aead(h(<
                                        h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'
                                       >),
                                     <ts2, 'TAI64N'>,
                                     h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                        aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                             <h(pk(~ltkI)), x>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                       >))
                           ) @ #vk.26 )
                      case Handshake_Init
                      by contradiction /* cyclic */
                    next
                      case c_aead
                      solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>)
                             ) @ #vk.30 )
                        case c_h
                        solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.31 )
                          case c_h
                          solve( !KU( h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>) ) @ #vk.36 )
                              case c_h
                              solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                             ~psk.1, '2'>)
                                     ) @ #vk.39 )
                                case c_h
                                solve( !KU( ~psk.1 ) @ #vk.55 )
                                  case PSK_reveal
                                  solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                                 aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                                      <h(pk(~ltkI)), x>,
                                                      h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                                >)
                                         ) @ #vk.42 )
                                    case c_h
                                    solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.48 )
                                      case c_h
                                      solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.53 )
                                        case Handshake_Init
                                        solve( !KU( ~ltkR ) @ #vk.60 )
                                          case AgentKey_reveal
                                          by contradiction /* from formulas */
                                        qed
                                      next
                                        case c_prf
                                        solve( !KU( ~tpk.1 ) @ #vk.60 )
                                          case PRFK_reveal
                                          by contradiction /* from formulas */
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              next
                case c_aead
                solve( !KU( aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                 <h(pk(~ltkI)), x.1>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                       ) @ #vk.22 )
                  case Handshake_Init
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'
                                     >),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                      aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), ~pkISurrogate>,
                                           h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                     >))
                         ) @ #vk.23 )
                    case Handshake_Init
                    solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>)
                           ) @ #vk.27 )
                      case c_h
                      solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.29 )
                        case c_h
                        solve( !KU( h(pk(~ltkI)) ) @ #vk.31 )
                          case Handshake_Init
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.33 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.48 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.36 )
                                case c_h
                                solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.42 )
                                  case c_h
                                  solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.46 )
                                    case Handshake_Init
                                    solve( !KU( ~ltkR ) @ #vk.53 )
                                      case AgentKey_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_prf
                                    solve( !KU( ~tpk.1 ) @ #vk.53 )
                                      case PRFK_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_h
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.33 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.48 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.36 )
                                case c_h
                                solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.42 )
                                  case c_h
                                  solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.46 )
                                    case Handshake_Init
                                    solve( !KU( ~ltkR ) @ #vk.53 )
                                      case AgentKey_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_prf
                                    solve( !KU( ~tpk.1 ) @ #vk.53 )
                                      case PRFK_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_aead
                    solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>)
                           ) @ #vk.27 )
                      case c_h
                      solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.29 )
                        case c_h
                        solve( !KU( h(pk(~ltkI)) ) @ #vk.31 )
                          case Handshake_Init
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.33 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.52 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.36 )
                                case c_h
                                solve( !KU( h(<
                                               h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), 
                                               ~psk.1, '2'>)
                                       ) @ #vk.42 )
                                  case c_h
                                  solve( !KU( ~psk.1 ) @ #vk.56 )
                                    case PSK_reveal
                                    solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                                   aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), 
                                                           '2'>),
                                                        <h(pk(~ltkI)), ~pkISurrogate>,
                                                        h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                                  >)
                                           ) @ #vk.45 )
                                      case c_h
                                      solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.50 )
                                        case c_h
                                        solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.54 )
                                          case Handshake_Init
                                          solve( !KU( ~ltkR ) @ #vk.61 )
                                            case AgentKey_reveal
                                            by contradiction /* from formulas */
                                          qed
                                        next
                                          case c_prf
                                          solve( !KU( ~tpk.1 ) @ #vk.61 )
                                            case PRFK_reveal
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_h
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.33 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.52 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.36 )
                                case c_h
                                solve( !KU( h(<
                                               h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), 
                                               ~psk.1, '2'>)
                                       ) @ #vk.42 )
                                  case c_h
                                  solve( !KU( ~psk.1 ) @ #vk.56 )
                                    case PSK_reveal
                                    solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                                   aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), 
                                                           '2'>),
                                                        <h(pk(~ltkI)), ~pkISurrogate>,
                                                        h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                                  >)
                                           ) @ #vk.45 )
                                      case c_h
                                      solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.50 )
                                        case c_h
                                        solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.54 )
                                          case Handshake_Init
                                          solve( !KU( ~ltkR ) @ #vk.61 )
                                            case AgentKey_reveal
                                            by contradiction /* from formulas */
                                          qed
                                        next
                                          case c_prf
                                          solve( !KU( ~tpk.1 ) @ #vk.61 )
                                            case PRFK_reveal
                                            by contradiction /* from formulas */
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                next
                  case c_aead
                  solve( !KU( aead(h(<
                                      h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), ~psk.1, '2'>),
                                   <ts2, 'TAI64N'>,
                                   h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                      aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>),
                                           <h(pk(~ltkI)), x.1>, h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                     >))
                         ) @ #vk.24 )
                    case Handshake_Init
                    solve( !KU( ~pkISurrogate ) @ #vk.38 )
                      case Handshake_Init
                      solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>)
                             ) @ #vk.28 )
                        case c_h
                        solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.31 )
                          case c_h
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.49 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.38 )
                                case c_h
                                solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.48 )
                                    case Handshake_Init
                                    solve( !KU( ~ltkR ) @ #vk.54 )
                                      case AgentKey_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  next
                                    case c_prf
                                    solve( !KU( ~tpk.1 ) @ #vk.54 )
                                      case PRFK_reveal
                                      by contradiction /* from formulas */
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  next
                    case c_aead
                    solve( !KU( h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>)
                           ) @ #vk.28 )
                      case c_h
                      solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>) ) @ #vk.30 )
                        case c_h
                        solve( !KU( h(pk(~ltkI)) ) @ #vk.32 )
                          case Handshake_Init
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.57 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.38 )
                                case c_h
                                solve( !KU( h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>)
                                       ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>) ) @ #vk.46 )
                                    case c_h
                                    solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                                   ~psk.1, '2'>)
                                           ) @ #vk.49 )
                                      case c_h
                                      solve( !KU( ~psk.1 ) @ #vk.65 )
                                        case PSK_reveal
                                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                                       aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), 
                                                               '2'>),
                                                            <h(pk(~ltkI)), x.1>,
                                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                                      >)
                                               ) @ #vk.51 )
                                          case c_h
                                          solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.56 )
                                            case c_h
                                            solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.61 )
                                              case Handshake_Init
                                              solve( !KU( ~ltkR ) @ #vk.70 )
                                                case AgentKey_reveal
                                                by contradiction /* from formulas */
                                              qed
                                            next
                                              case c_prf
                                              solve( !KU( ~tpk.1 ) @ #vk.70 )
                                                case PRFK_reveal
                                                by contradiction /* from formulas */
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        next
                          case c_h
                          solve( !KU( h(<
                                         h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '1'>), ~psk, '2'
                                        >)
                                 ) @ #vk.35 )
                            case c_h
                            solve( !KU( ~psk ) @ #vk.57 )
                              case PSK_reveal
                              solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>), 
                                             aead(h(<h(<h('noise'), pk(~ekI), '1'>), prf(~tpk.1, ~r3), '2'>),
                                                  <h(pk(~ltkI)), x>,
                                                  h(<h(<h('noise'), 'id', pk(~ltkR)>), pk(~ekI)>))
                                            >)
                                     ) @ #vk.38 )
                                case c_h
                                solve( !KU( h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '2'>)
                                       ) @ #vk.44 )
                                  case c_h
                                  solve( !KU( h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>) ) @ #vk.46 )
                                    case c_h
                                    solve( !KU( h(<h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), '1'>), 
                                                   ~psk.1, '2'>)
                                           ) @ #vk.49 )
                                      case c_h
                                      solve( !KU( ~psk.1 ) @ #vk.65 )
                                        case PSK_reveal
                                        solve( !KU( h(<h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>), 
                                                       aead(h(<h(<h('noise'), peki2, '1'>), prf(~tpk.1, ~r3), 
                                                               '2'>),
                                                            <h(pk(~ltkI)), x.1>,
                                                            h(<h(<h('noise'), 'id', pk(~ltkR)>), peki2>))
                                                      >)
                                               ) @ #vk.51 )
                                          case c_h
                                          solve( !KU( h(<h('noise'), pk(~ekI), '1'>) ) @ #vk.56 )
                                            case c_h
                                            solve( !KU( prf(~tpk.1, ~r3) ) @ #vk.61 )
                                              case Handshake_Init
                                              solve( !KU( ~ltkR ) @ #vk.70 )
                                                case AgentKey_reveal
                                                by contradiction /* from formulas */
                                              qed
                                            next
                                              case c_prf
                                              solve( !KU( ~tpk.1 ) @ #vk.70 )
                                                case PRFK_reveal
                                                by contradiction /* from formulas */
                                              qed
                                            qed
                                          qed
                                        qed
                                      qed
                                    qed
                                  qed
                                qed
                              qed
                            qed
                          qed
                        qed
                      qed
                    qed
                  qed
                qed
              qed
            qed
          qed
        qed
      qed
    qed
  qed
qed

lemma dos_resistance:
  all-traces
  "∀ pki pkr peki psk cr kb ka k #i.
    ((RKeys( <pki, pkr, peki, psk, cr, kb, ka, k> ) @ #i) ∧
     (¬(∃ pki.1 pkr.1 peki1 psk1 #j.
         (ISend( <pki.1, pkr.1, peki1, psk1, kb> ) @ #j) ∧ (#j < #i)))) ⇒
    (∃ #j. (Reveal_PSK( psk ) @ #j) ∧ (#j < #i))"
/*
guarded formula characterizing all counter-examples:
"∃ pki pkr peki psk cr kb ka k #i.
  (RKeys( <pki, pkr, peki, psk, cr, kb, ka, k> ) @ #i)
 ∧
  (∀ pki.1 pkr.1 peki1 psk1 #j.
    (ISend( <pki.1, pkr.1, peki1, psk1, kb> ) @ #j) ⇒ ¬(#j < #i)) ∧
  (∀ #j. (Reveal_PSK( psk ) @ #j) ⇒ ¬(#j < #i))"
*/
by sorry

/* All well-formedness checks were successful. */

end

==============================================================================
summary of summaries:

analyzed: pq_wireguard.spthy

  session_create (exists-trace): analysis incomplete (1 steps)
  session_key_collision (all-traces): analysis incomplete (1 steps)
  session_uniq (all-traces): analysis incomplete (1 steps)
  KCI_on_initiator_resistance (all-traces): analysis incomplete (1 steps)
  KCI_on_responder_resistance (all-traces): analysis incomplete (1 steps)
  UKS_on_initiator_resistance (all-traces): analysis incomplete (1 steps)
  UKS_on_initiator_with_default_psk (all-traces): analysis incomplete (1 steps)
  UKS_on_responder_resistance (all-traces): analysis incomplete (1 steps)
  key_init_secrecy (all-traces): analysis incomplete (1 steps)
  key_resp_secrecy (all-traces): analysis incomplete (1 steps)
  key_secrecy (all-traces): analysis incomplete (1 steps)
  encap_init_secrecy (all-traces): analysis incomplete (1 steps)
  encap_resp_secrecy (all-traces): analysis incomplete (1 steps)
  identity_hiding (all-traces): analysis incomplete (1 steps)
  replay_attack_resistance (all-traces): verified (425 steps)
  dos_resistance (all-traces): analysis incomplete (1 steps)

==============================================================================
